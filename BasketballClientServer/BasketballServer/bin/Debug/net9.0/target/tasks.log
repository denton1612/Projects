2025-04-26 15:50:06,222 [1] INFO BasketballServer.StartServer - Starting basketball server
2025-04-26 15:50:06,238 [1] INFO BasketballServer.StartServer - Reading properties from app.config...
2025-04-26 15:56:23,233 [1] INFO BasketballServer.StartServer - Starting basketball server
2025-04-26 15:56:23,249 [1] INFO BasketballServer.StartServer - Reading properties from app.config...
2025-04-26 15:58:10,310 [1] INFO BasketballServer.StartServer - Starting basketball server
2025-04-26 15:58:10,319 [1] INFO BasketballServer.StartServer - Reading properties from app.config...
2025-04-26 17:09:13,546 [1] INFO BasketballServer.StartServer - Starting basketball server
2025-04-26 17:09:13,564 [1] INFO BasketballServer.StartServer - Reading properties from app.config...
2025-04-26 17:09:20,817 [9] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = sd and password = dsa
2025-04-26 17:13:03,263 [1] INFO BasketballServer.StartServer - Starting basketball server
2025-04-26 17:13:03,279 [1] INFO BasketballServer.StartServer - Reading properties from app.config...
2025-04-26 17:13:03,280 [1] DEBUG BasketballServer.utils.JsonConcurrentServer - Creating JsonConcurrentServer...
2025-04-26 17:15:03,787 [1] INFO BasketballServer.StartServer - Starting basketball server
2025-04-26 17:15:03,805 [1] INFO BasketballServer.StartServer - Reading properties from app.config...
2025-04-26 17:15:03,807 [1] DEBUG BasketballServer.utils.JsonConcurrentServer - Creating JsonConcurrentServer...
2025-04-26 17:15:03,811 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-04-26 17:19:00,601 [1] INFO BasketballServer.StartServer - Starting basketball server
2025-04-26 17:19:00,617 [1] INFO BasketballServer.StartServer - Reading properties from app.config...
2025-04-26 17:19:00,618 [1] DEBUG BasketballServer.utils.JsonConcurrentServer - Creating JsonConcurrentServer...
2025-04-26 17:19:00,622 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-04-26 17:19:12,381 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-04-26 17:19:12,412 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-04-26 17:19:12,431 [9] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = denis and password = denis214
2025-04-26 17:22:50,542 [1] INFO BasketballServer.StartServer - Starting basketball server
2025-04-26 17:22:50,551 [1] INFO BasketballServer.StartServer - Reading properties from app.config...
2025-04-26 17:22:50,553 [1] DEBUG BasketballServer.utils.JsonConcurrentServer - Creating JsonConcurrentServer...
2025-04-26 17:22:50,556 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-04-26 17:23:05,250 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-04-26 17:23:05,281 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-04-26 17:23:05,299 [9] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = denis and password = denis1234.
2025-04-26 17:25:26,510 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-04-26 17:25:26,511 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-04-26 17:25:26,526 [12] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = denis and password = denis1234.
2025-04-26 17:31:41,945 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-04-26 17:31:41,946 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-04-26 17:31:41,962 [25] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = denis and password = denis1234.
2025-04-26 17:34:25,487 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-04-26 17:34:25,488 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-04-26 17:34:25,502 [31] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = denis and password = denis2134.
2025-04-26 17:40:49,764 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-04-26 17:40:49,764 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-04-26 17:40:49,780 [44] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = denis and password = denis1234.
2025-04-26 18:11:30,750 [1] INFO BasketballServer.StartServer - Starting basketball server
2025-04-26 18:11:30,759 [1] INFO BasketballServer.StartServer - Reading properties from app.config...
2025-04-26 18:11:30,761 [1] DEBUG BasketballServer.utils.JsonConcurrentServer - Creating JsonConcurrentServer...
2025-04-26 18:11:30,765 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-04-26 18:11:51,985 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-04-26 18:11:52,016 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-04-26 18:11:52,034 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-04-26 18:11:52,042 [9] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = denis and password = denis1234.
2025-04-26 18:11:52,063 [9] ERROR BasketballPersistance.repository.BDRepositoryCashier - Microsoft.Data.Sqlite.SqliteException (0x80004005): SQLite Error 1: 'no such table: cashiers'.
   at Microsoft.Data.Sqlite.SqliteException.ThrowExceptionForRC(Int32 rc, sqlite3 db)
   at Microsoft.Data.Sqlite.SqliteCommand.PrepareAndEnumerateStatements()+MoveNext()
   at Microsoft.Data.Sqlite.SqliteCommand.GetStatements()+MoveNext()
   at Microsoft.Data.Sqlite.SqliteDataReader.NextResult()
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReader(CommandBehavior behavior)
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteDbDataReader(CommandBehavior behavior)
   at BasketballPersistance.repository.BDRepositoryCashier.findByUsernameAndPassowrd(String username, String password) in C:\Users\dento\Desktop\github\mpp-proiect-csharp-denton1612\TemaProiect3\BasketballClientServer\BasketballPersistance\BDRepositoryCashier.cs:line 59
2025-04-26 18:11:52,070 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = ERROR was sent
2025-04-26 18:12:07,575 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-04-26 18:12:07,576 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-04-26 18:12:07,576 [11] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-04-26 18:12:07,576 [11] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = denis and password = denis1234.
2025-04-26 18:12:07,576 [11] ERROR BasketballPersistance.repository.BDRepositoryCashier - Microsoft.Data.Sqlite.SqliteException (0x80004005): SQLite Error 1: 'no such table: cashiers'.
   at Microsoft.Data.Sqlite.SqliteException.ThrowExceptionForRC(Int32 rc, sqlite3 db)
   at Microsoft.Data.Sqlite.SqliteCommand.PrepareAndEnumerateStatements()+MoveNext()
   at Microsoft.Data.Sqlite.SqliteCommand.GetStatements()+MoveNext()
   at Microsoft.Data.Sqlite.SqliteDataReader.NextResult()
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReader(CommandBehavior behavior)
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteDbDataReader(CommandBehavior behavior)
   at BasketballPersistance.repository.BDRepositoryCashier.findByUsernameAndPassowrd(String username, String password) in C:\Users\dento\Desktop\github\mpp-proiect-csharp-denton1612\TemaProiect3\BasketballClientServer\BasketballPersistance\BDRepositoryCashier.cs:line 59
2025-04-26 18:12:07,577 [11] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = ERROR was sent
2025-04-26 18:12:35,671 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-04-26 18:12:35,672 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-04-26 18:12:35,672 [12] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-04-26 18:12:35,672 [12] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = denis and password = denis1234.
2025-04-26 18:12:35,672 [12] ERROR BasketballPersistance.repository.BDRepositoryCashier - Microsoft.Data.Sqlite.SqliteException (0x80004005): SQLite Error 1: 'no such table: cashiers'.
   at Microsoft.Data.Sqlite.SqliteException.ThrowExceptionForRC(Int32 rc, sqlite3 db)
   at Microsoft.Data.Sqlite.SqliteCommand.PrepareAndEnumerateStatements()+MoveNext()
   at Microsoft.Data.Sqlite.SqliteCommand.GetStatements()+MoveNext()
   at Microsoft.Data.Sqlite.SqliteDataReader.NextResult()
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReader(CommandBehavior behavior)
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteDbDataReader(CommandBehavior behavior)
   at BasketballPersistance.repository.BDRepositoryCashier.findByUsernameAndPassowrd(String username, String password) in C:\Users\dento\Desktop\github\mpp-proiect-csharp-denton1612\TemaProiect3\BasketballClientServer\BasketballPersistance\BDRepositoryCashier.cs:line 59
2025-04-26 18:12:35,673 [12] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = ERROR was sent
2025-04-26 18:13:33,662 [1] INFO BasketballServer.StartServer - Starting basketball server
2025-04-26 18:13:33,671 [1] INFO BasketballServer.StartServer - Reading properties from app.config...
2025-04-26 18:13:33,672 [1] DEBUG BasketballServer.utils.JsonConcurrentServer - Creating JsonConcurrentServer...
2025-04-26 18:13:33,676 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-04-26 18:13:40,824 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-04-26 18:13:40,825 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-04-26 18:13:40,857 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-04-26 18:13:40,859 [9] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = denis and password = denis1234.
2025-04-26 18:13:40,883 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-04-26 18:14:27,055 [1] INFO BasketballServer.StartServer - Starting basketball server
2025-04-26 18:14:27,064 [1] INFO BasketballServer.StartServer - Reading properties from app.config...
2025-04-26 18:14:27,065 [1] DEBUG BasketballServer.utils.JsonConcurrentServer - Creating JsonConcurrentServer...
2025-04-26 18:14:27,069 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-04-26 18:14:35,436 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-04-26 18:14:35,438 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-04-26 18:14:35,474 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-04-26 18:14:35,476 [9] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = denis and password = denis1234.
2025-04-26 18:14:35,502 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-04-26 18:14:43,769 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-04-26 18:14:43,769 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-04-26 18:14:43,784 [11] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-04-26 18:14:43,784 [11] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = denis and password = denis1234.
2025-04-26 18:14:43,785 [11] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = ERROR was sent
2025-04-26 18:15:47,438 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-04-26 18:15:47,439 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-04-26 18:15:47,439 [12] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-04-26 18:15:47,439 [12] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = marcel and password = marcel1234.
2025-04-26 18:15:47,439 [12] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-04-26 18:16:02,655 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-04-26 18:16:02,655 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-04-26 18:16:02,670 [13] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-04-26 18:16:02,670 [13] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = denis and password = denis1234.
2025-04-26 18:16:02,670 [13] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = ERROR was sent
2025-04-26 18:16:10,425 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-04-26 18:16:10,425 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-04-26 18:16:10,425 [14] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-04-26 18:16:10,425 [14] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = denis and password = denis1234.
2025-04-26 18:16:10,426 [14] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = ERROR was sent
2025-04-26 18:43:20,285 [1] INFO BasketballServer.StartServer - Starting basketball server
2025-04-26 18:43:20,297 [1] INFO BasketballServer.StartServer - Reading properties from app.config...
2025-04-26 18:43:20,299 [1] DEBUG BasketballServer.utils.JsonConcurrentServer - Creating JsonConcurrentServer...
2025-04-26 18:43:20,304 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-04-26 18:44:47,118 [1] INFO BasketballServer.StartServer - Starting basketball server
2025-04-26 18:44:47,128 [1] INFO BasketballServer.StartServer - Reading properties from app.config...
2025-04-26 18:44:47,129 [1] DEBUG BasketballServer.utils.JsonConcurrentServer - Creating JsonConcurrentServer...
2025-04-26 18:44:47,133 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-04-26 18:45:24,541 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-04-26 18:45:24,542 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-04-26 18:45:24,573 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-04-26 18:45:24,575 [9] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = denis and password = denis1234.
2025-04-26 18:45:24,598 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-04-26 18:45:35,693 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGOUT was received
2025-04-26 18:45:35,694 [9] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = denis and password = denis1234.
2025-04-26 18:45:35,694 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-04-26 18:45:50,374 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-04-26 18:45:50,374 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-04-26 18:45:50,374 [11] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-04-26 18:45:50,374 [11] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = denis and password = denis1234.
2025-04-26 18:45:50,375 [11] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-04-26 18:45:51,376 [11] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGOUT was received
2025-04-26 18:45:51,376 [11] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = denis and password = denis1234.
2025-04-26 18:45:51,376 [11] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-04-26 18:45:54,183 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-04-26 18:45:54,184 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-04-26 18:45:54,184 [12] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-04-26 18:45:54,184 [12] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = denis and password = denis1234.
2025-04-26 18:45:54,184 [12] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-04-26 18:45:55,198 [12] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGOUT was received
2025-04-26 18:45:55,198 [12] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = denis and password = denis1234.
2025-04-26 18:45:55,198 [12] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-04-26 18:46:20,993 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-04-26 18:46:20,993 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-04-26 18:46:21,008 [13] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-04-26 18:46:21,009 [13] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = denis and password = denis1234.
2025-04-26 18:46:21,009 [13] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-04-26 18:46:23,094 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-04-26 18:46:23,094 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-04-26 18:46:23,094 [14] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-04-26 18:46:23,095 [14] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = denis and password = denis1234.
2025-04-26 18:46:23,095 [14] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = ERROR was sent
2025-04-26 18:46:24,716 [13] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGOUT was received
2025-04-26 18:46:24,716 [13] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = denis and password = denis1234.
2025-04-26 18:46:24,716 [13] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-04-26 18:46:25,680 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-04-26 18:46:25,681 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-04-26 18:46:25,681 [15] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-04-26 18:46:25,681 [15] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = denis and password = denis1234.
2025-04-26 18:46:25,682 [15] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-04-26 18:46:26,939 [15] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGOUT was received
2025-04-26 18:46:26,939 [15] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = denis and password = denis1234.
2025-04-26 18:46:26,940 [15] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-04-26 19:25:55,509 [1] INFO BasketballServer.StartServer - Starting basketball server
2025-04-26 19:25:55,525 [1] INFO BasketballServer.StartServer - Reading properties from app.config...
2025-04-26 19:25:55,526 [1] DEBUG BasketballServer.utils.JsonConcurrentServer - Creating JsonConcurrentServer...
2025-04-26 19:25:55,530 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-04-26 19:26:05,738 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-04-26 19:26:05,772 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-04-26 19:26:05,791 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-04-26 19:26:05,800 [9] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = denis and password = denis1234.
2025-04-26 19:26:05,937 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-04-26 19:26:06,937 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = GET_GAMES was received
2025-04-26 19:26:06,945 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = GET_GAMES was sent
2025-04-26 19:27:42,731 [9] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\mpp-proiect-csharp-denton1612\TemaProiect3\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-04-26 19:27:43,735 [9] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\mpp-proiect-csharp-denton1612\TemaProiect3\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-04-26 19:27:44,747 [9] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\mpp-proiect-csharp-denton1612\TemaProiect3\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-04-26 19:27:45,750 [9] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\mpp-proiect-csharp-denton1612\TemaProiect3\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-04-26 19:27:46,765 [9] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\mpp-proiect-csharp-denton1612\TemaProiect3\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-04-26 19:27:47,768 [9] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\mpp-proiect-csharp-denton1612\TemaProiect3\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-04-26 19:27:48,783 [9] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\mpp-proiect-csharp-denton1612\TemaProiect3\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-04-26 19:27:49,796 [9] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\mpp-proiect-csharp-denton1612\TemaProiect3\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-04-26 19:27:50,799 [9] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\mpp-proiect-csharp-denton1612\TemaProiect3\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-04-26 19:27:51,814 [9] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\mpp-proiect-csharp-denton1612\TemaProiect3\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-04-26 19:27:52,815 [9] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\mpp-proiect-csharp-denton1612\TemaProiect3\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-04-26 19:27:53,825 [9] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\mpp-proiect-csharp-denton1612\TemaProiect3\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-04-26 19:27:54,830 [9] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\mpp-proiect-csharp-denton1612\TemaProiect3\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-04-26 19:27:55,839 [9] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\mpp-proiect-csharp-denton1612\TemaProiect3\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-04-26 19:27:56,841 [9] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\mpp-proiect-csharp-denton1612\TemaProiect3\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-04-26 19:27:57,854 [9] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\mpp-proiect-csharp-denton1612\TemaProiect3\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-04-26 19:27:58,857 [9] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\mpp-proiect-csharp-denton1612\TemaProiect3\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-04-26 19:27:59,860 [9] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\mpp-proiect-csharp-denton1612\TemaProiect3\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-04-26 19:28:00,861 [9] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\mpp-proiect-csharp-denton1612\TemaProiect3\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-04-26 19:28:38,480 [1] INFO BasketballServer.StartServer - Starting basketball server
2025-04-26 19:28:38,496 [1] INFO BasketballServer.StartServer - Reading properties from app.config...
2025-04-26 19:28:38,498 [1] DEBUG BasketballServer.utils.JsonConcurrentServer - Creating JsonConcurrentServer...
2025-04-26 19:28:38,502 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-04-26 19:28:46,967 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-04-26 19:28:46,999 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-04-26 19:28:47,017 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-04-26 19:28:47,025 [9] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = denis and password = denis1234.
2025-04-26 19:28:47,059 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-04-26 19:28:48,073 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = GET_GAMES was received
2025-04-26 19:28:48,079 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = GET_GAMES was sent
2025-04-26 19:29:02,856 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGOUT was received
2025-04-26 19:29:02,856 [9] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = denis and password = denis1234.
2025-04-26 19:29:02,857 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-04-26 19:29:07,209 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-04-26 19:29:07,210 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-04-26 19:29:07,210 [11] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-04-26 19:29:07,210 [11] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = denis and password = denis1234.
2025-04-26 19:29:07,210 [11] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-04-26 19:29:08,212 [11] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = GET_GAMES was received
2025-04-26 19:29:08,212 [11] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = GET_GAMES was sent
2025-04-26 19:29:12,484 [11] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGOUT was received
2025-04-26 19:29:12,484 [11] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = denis and password = denis1234.
2025-04-26 19:29:12,485 [11] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-04-26 19:31:47,514 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-04-26 19:31:47,514 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-04-26 19:31:47,530 [13] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-04-26 19:31:47,530 [13] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = denis and password = denis1234.
2025-04-26 19:31:47,530 [13] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-04-26 19:31:48,543 [13] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = GET_GAMES was received
2025-04-26 19:31:48,544 [13] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = GET_GAMES was sent
2025-04-26 19:31:59,472 [13] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGOUT was received
2025-04-26 19:31:59,472 [13] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = denis and password = denis1234.
2025-04-26 19:31:59,472 [13] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-04-27 21:43:58,186 [1] INFO BasketballServer.StartServer - Starting basketball server
2025-04-27 21:43:58,202 [1] INFO BasketballServer.StartServer - Reading properties from app.config...
2025-04-27 21:43:58,204 [1] DEBUG BasketballServer.utils.JsonConcurrentServer - Creating JsonConcurrentServer...
2025-04-27 21:43:58,208 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-04-27 21:44:16,023 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-04-27 21:44:16,065 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-04-27 21:44:16,089 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-04-27 21:44:16,098 [9] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = denis and password = denis1234.
2025-04-27 21:44:16,282 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-04-27 21:44:17,288 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = GET_GAMES was received
2025-04-27 21:44:17,295 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = GET_GAMES was sent
2025-04-27 21:44:41,079 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = BUY_TICKET was received
2025-04-27 21:44:41,080 [9] INFO BasketballPersistance.repository.BDRepositoryClient - Adding client: Name: paul, Address: cluj
2025-04-27 21:44:41,084 [9] INFO BasketballPersistance.repository.BDRepositoryClient - Client Name: paul, Address: cluj was added.
2025-04-27 21:44:41,084 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Adding purchase: BasketballModel.domain.Purchase
2025-04-27 21:44:41,087 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Purchase was added.
2025-04-27 21:44:41,092 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = BUY_TICKET was sent
2025-04-27 21:45:49,073 [9] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\mpp-proiect-csharp-denton1612\TemaProiect3\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-04-27 21:45:50,084 [9] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\mpp-proiect-csharp-denton1612\TemaProiect3\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-04-27 21:45:51,099 [9] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\mpp-proiect-csharp-denton1612\TemaProiect3\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-04-27 21:45:52,111 [9] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\mpp-proiect-csharp-denton1612\TemaProiect3\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-04-27 21:45:53,123 [9] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\mpp-proiect-csharp-denton1612\TemaProiect3\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-04-27 21:45:54,136 [9] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\mpp-proiect-csharp-denton1612\TemaProiect3\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-04-27 21:45:55,146 [9] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\mpp-proiect-csharp-denton1612\TemaProiect3\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-04-27 21:51:32,638 [1] INFO BasketballServer.StartServer - Starting basketball server
2025-04-27 21:51:32,647 [1] INFO BasketballServer.StartServer - Reading properties from app.config...
2025-04-27 21:51:32,648 [1] DEBUG BasketballServer.utils.JsonConcurrentServer - Creating JsonConcurrentServer...
2025-04-27 21:51:32,653 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-04-27 21:51:59,908 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-04-27 21:51:59,946 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-04-27 21:51:59,968 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-04-27 21:51:59,976 [9] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = marcel and password = marcel1234.
2025-04-27 21:52:00,000 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-04-27 21:52:01,010 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = GET_GAMES was received
2025-04-27 21:52:01,017 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = GET_GAMES was sent
2025-04-27 21:52:06,602 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-04-27 21:52:06,603 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-04-27 21:52:06,623 [11] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-04-27 21:52:06,623 [11] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = marcel and password = marcel1234.
2025-04-27 21:52:06,624 [11] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = ERROR was sent
2025-04-27 21:52:33,146 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-04-27 21:52:33,147 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-04-27 21:52:33,147 [12] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-04-27 21:52:33,147 [12] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = denis and password = denis1234.
2025-04-27 21:52:33,147 [12] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-04-27 21:52:34,159 [12] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = GET_GAMES was received
2025-04-27 21:52:34,160 [12] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = GET_GAMES was sent
2025-04-27 21:52:46,890 [12] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = BUY_TICKET was received
2025-04-27 21:52:46,892 [12] INFO BasketballPersistance.repository.BDRepositoryPurchase - Adding purchase: BasketballModel.domain.Purchase
2025-04-27 21:52:46,894 [12] ERROR BasketballNetworking.json_protocol.ClientWorker - Microsoft.Data.Sqlite.SqliteException (0x80004005): SQLite Error 19: 'FOREIGN KEY constraint failed'.
   at Microsoft.Data.Sqlite.SqliteException.ThrowExceptionForRC(Int32 rc, sqlite3 db)
   at Microsoft.Data.Sqlite.SqliteDataReader.NextResult()
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReader(CommandBehavior behavior)
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReader()
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteNonQuery()
   at BasketballPersistance.repository.BDRepositoryPurchase.Add(Purchase entity) in C:\Users\dento\Desktop\github\mpp-proiect-csharp-denton1612\TemaProiect3\BasketballClientServer\BasketballPersistance\BDRepositoryPurchase.cs:line 56
   at BasketballServer.ServiceImpl.BuyTicket(Client client, String seats, Game game) in C:\Users\dento\Desktop\github\mpp-proiect-csharp-denton1612\TemaProiect3\BasketballClientServer\BasketballServer\ServiceImpl.cs:line 76
   at BasketballNetworking.json_protocol.ClientWorker.HandleRequest(Request request) in C:\Users\dento\Desktop\github\mpp-proiect-csharp-denton1612\TemaProiect3\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 146
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\mpp-proiect-csharp-denton1612\TemaProiect3\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 56
2025-04-27 21:55:14,851 [1] INFO BasketballServer.StartServer - Starting basketball server
2025-04-27 21:55:14,861 [1] INFO BasketballServer.StartServer - Reading properties from app.config...
2025-04-27 21:55:14,862 [1] DEBUG BasketballServer.utils.JsonConcurrentServer - Creating JsonConcurrentServer...
2025-04-27 21:55:14,865 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-04-27 21:55:26,401 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-04-27 21:55:26,402 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-04-27 21:55:26,441 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-04-27 21:55:26,444 [9] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = denis and password = denis1234.
2025-04-27 21:55:26,466 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-04-27 21:55:27,469 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = GET_GAMES was received
2025-04-27 21:55:27,475 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = GET_GAMES was sent
2025-04-27 21:55:35,986 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = BUY_TICKET was received
2025-04-27 21:55:35,988 [9] INFO BasketballPersistance.repository.BDRepositoryClient - Adding client: Name: alex, Address: beius
2025-04-27 21:55:35,991 [9] INFO BasketballPersistance.repository.BDRepositoryClient - Client Name: alex, Address: beius was added.
2025-04-27 21:55:35,991 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Adding purchase: BasketballModel.domain.Purchase
2025-04-27 21:55:35,994 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Purchase was added.
2025-04-27 21:55:35,999 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = BUY_TICKET was sent
2025-04-27 21:55:35,999 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Purchase was made in ServiceImpl for game = Memphis Grizzlies - Oklahoma City Thunder
2025-04-27 21:55:35,999 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-04-27 21:55:48,735 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-04-27 21:55:48,735 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-04-27 21:55:48,756 [11] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-04-27 21:55:48,756 [11] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = marcel and password = marcel1234.
2025-04-27 21:55:48,756 [11] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-04-27 21:55:49,761 [11] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = GET_GAMES was received
2025-04-27 21:55:49,762 [11] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = GET_GAMES was sent
2025-04-27 21:56:20,670 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = BUY_TICKET was received
2025-04-27 21:56:20,670 [9] INFO BasketballPersistance.repository.BDRepositoryClient - Adding client: Name: alex, Address: cluj
2025-04-27 21:56:20,673 [9] INFO BasketballPersistance.repository.BDRepositoryClient - Client Name: alex, Address: cluj was added.
2025-04-27 21:56:20,674 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Adding purchase: BasketballModel.domain.Purchase
2025-04-27 21:56:20,676 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Purchase was added.
2025-04-27 21:56:20,679 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = BUY_TICKET was sent
2025-04-27 21:56:20,679 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = BUY_TICKET was sent
2025-04-27 21:56:20,679 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Purchase was made in ServiceImpl for game = Memphis Grizzlies - Oklahoma City Thunder
2025-04-27 21:56:20,679 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-04-27 21:58:29,115 [1] INFO BasketballServer.StartServer - Starting basketball server
2025-04-27 21:58:29,133 [1] INFO BasketballServer.StartServer - Reading properties from app.config...
2025-04-27 21:58:29,134 [1] DEBUG BasketballServer.utils.JsonConcurrentServer - Creating JsonConcurrentServer...
2025-04-27 21:58:29,138 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-04-27 22:22:41,777 [1] INFO BasketballServer.StartServer - Starting basketball server
2025-04-27 22:22:41,787 [1] INFO BasketballServer.StartServer - Reading properties from app.config...
2025-04-27 22:22:41,788 [1] DEBUG BasketballServer.utils.JsonConcurrentServer - Creating JsonConcurrentServer...
2025-04-27 22:22:41,792 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-04-27 22:22:56,610 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-04-27 22:22:56,646 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-04-27 22:22:56,667 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-04-27 22:22:56,675 [9] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = denis and password = denis1234.
2025-04-27 22:22:56,833 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-04-27 22:22:57,843 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = GET_GAMES was received
2025-04-27 22:22:57,849 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = GET_GAMES was sent
2025-04-27 22:23:05,921 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-04-27 22:23:05,921 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-04-27 22:23:05,940 [11] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-04-27 22:23:05,940 [11] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = marcel and password = marcel1234.
2025-04-27 22:23:05,941 [11] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-04-27 22:23:06,952 [11] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = GET_GAMES was received
2025-04-27 22:23:06,953 [11] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = GET_GAMES was sent
2025-04-27 22:23:23,631 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = BUY_TICKET was received
2025-04-27 22:23:23,633 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Adding purchase: BasketballModel.domain.Purchase
2025-04-27 22:23:23,637 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Purchase was added.
2025-04-27 22:23:23,641 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = BUY_TICKET was sent
2025-04-27 22:23:23,642 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = BUY_TICKET was sent
2025-04-27 22:23:23,642 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Purchase was made in ServiceImpl for game = Memphis Grizzlies - Oklahoma City Thunder
2025-04-27 22:23:23,642 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-04-27 22:23:50,821 [11] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGOUT was received
2025-04-27 22:23:50,821 [11] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = marcel and password = marcel1234.
2025-04-27 22:23:50,821 [11] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-04-27 22:24:04,879 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-04-27 22:24:04,880 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-04-27 22:24:04,880 [12] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-04-27 22:24:04,880 [12] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = marcel and password = marcel1234.
2025-04-27 22:24:04,880 [12] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-04-27 22:24:05,885 [12] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = GET_GAMES was received
2025-04-27 22:24:05,886 [12] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = GET_GAMES was sent
2025-04-27 22:24:09,995 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGOUT was received
2025-04-27 22:24:09,995 [9] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = denis and password = denis1234.
2025-04-27 22:24:09,995 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-04-27 22:44:50,383 [1] INFO BasketballServer.StartServer - Starting basketball server
2025-04-27 22:44:50,400 [1] INFO BasketballServer.StartServer - Reading properties from app.config...
2025-04-27 22:44:50,402 [1] DEBUG BasketballServer.utils.JsonConcurrentServer - Creating JsonConcurrentServer...
2025-04-27 22:44:50,406 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-04-27 22:45:16,764 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-04-27 22:45:16,800 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-04-27 22:45:16,821 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-04-27 22:45:16,829 [9] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = denis and password = dsafsa
2025-04-27 22:45:16,857 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = ERROR was sent
2025-04-27 22:45:26,967 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-04-27 22:45:26,967 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-04-27 22:45:26,968 [11] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-04-27 22:45:26,968 [11] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = denis and password = denis1234.
2025-04-27 22:45:26,970 [11] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-04-27 22:45:27,970 [11] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = GET_GAMES was received
2025-04-27 22:45:27,977 [11] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = GET_GAMES was sent
2025-04-27 22:45:57,079 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-04-27 22:45:57,079 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-04-27 22:45:57,099 [12] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-04-27 22:45:57,099 [12] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = marcel and password = marcel1234.
2025-04-27 22:45:57,100 [12] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-04-27 22:45:58,104 [12] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = GET_GAMES was received
2025-04-27 22:45:58,105 [12] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = GET_GAMES was sent
2025-04-27 22:46:21,745 [12] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = BUY_TICKET was received
2025-04-27 22:46:21,746 [12] INFO BasketballPersistance.repository.BDRepositoryClient - Adding client: Name: mirela, Address: beius
2025-04-27 22:46:21,750 [12] INFO BasketballPersistance.repository.BDRepositoryClient - Client Name: mirela, Address: beius was added.
2025-04-27 22:46:21,750 [12] INFO BasketballPersistance.repository.BDRepositoryPurchase - Adding purchase: BasketballModel.domain.Purchase
2025-04-27 22:46:21,753 [12] INFO BasketballPersistance.repository.BDRepositoryPurchase - Purchase was added.
2025-04-27 22:46:21,757 [12] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = BUY_TICKET was sent
2025-04-27 22:46:21,758 [12] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = BUY_TICKET was sent
2025-04-27 22:46:21,758 [12] DEBUG BasketballNetworking.json_protocol.ClientWorker - Purchase was made in ServiceImpl for game = Memphis Grizzlies - Oklahoma City Thunder
2025-04-27 22:46:21,758 [12] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-04-27 22:48:45,910 [11] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGOUT was received
2025-04-27 22:48:45,911 [11] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = denis and password = denis1234.
2025-04-27 22:48:45,911 [11] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-04-27 22:48:47,437 [12] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGOUT was received
2025-04-27 22:48:47,437 [12] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = marcel and password = marcel1234.
2025-04-27 22:48:47,438 [12] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-04-27 22:49:00,803 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-04-27 22:49:00,804 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-04-27 22:49:00,804 [14] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-04-27 22:49:00,804 [14] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = denis and password = denis1234.
2025-04-27 22:49:00,804 [14] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-04-27 22:49:01,807 [14] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = GET_GAMES was received
2025-04-27 22:49:01,808 [14] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = GET_GAMES was sent
2025-04-27 22:49:09,674 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-04-27 22:49:09,674 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-04-27 22:49:09,674 [13] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-04-27 22:49:09,674 [13] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = denis and password = denis1234.
2025-04-27 22:49:09,675 [13] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = ERROR was sent
2025-04-27 22:49:46,653 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-04-27 22:49:46,654 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-04-27 22:49:46,654 [16] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-04-27 22:49:46,654 [16] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = denis and password = denis1234.
2025-04-27 22:49:46,654 [16] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = ERROR was sent
2025-04-28 16:58:34,765 [1] INFO BasketballServer.StartServer - Starting basketball server
2025-04-28 16:58:34,782 [1] INFO BasketballServer.StartServer - Reading properties from app.config...
2025-04-28 16:58:34,783 [1] DEBUG BasketballServer.utils.JsonConcurrentServer - Creating JsonConcurrentServer...
2025-04-28 16:58:34,787 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-04-28 16:58:46,816 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-04-28 16:58:46,853 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-04-28 16:58:46,875 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-04-28 16:58:46,883 [9] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = denis and password = denis1234.
2025-04-28 16:58:47,023 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-04-28 16:58:48,036 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = GET_GAMES was received
2025-04-28 16:58:48,043 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = GET_GAMES was sent
2025-04-28 16:58:51,755 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-04-28 16:58:51,756 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-04-28 16:58:51,775 [11] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-04-28 16:58:51,775 [11] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = marcel and password = marcel1234.
2025-04-28 16:58:51,775 [11] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-04-28 16:58:52,778 [11] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = GET_GAMES was received
2025-04-28 16:58:52,779 [11] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = GET_GAMES was sent
2025-04-28 16:58:56,804 [11] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = GET_PURCHASES was received
2025-04-28 16:58:56,805 [11] DEBUG BasketballNetworking.json_protocol.ClientWorker - Purchases filtered for client = Name: denis, Address: 
2025-04-28 16:58:56,805 [11] INFO BasketballPersistance.repository.BDRepositoryPurchase - Filter by client name is starting...
2025-04-28 16:58:56,806 [11] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 6
2025-04-28 16:58:56,807 [11] INFO BasketballPersistance.repository.BDRepositoryPurchase - Client found: Name: denis, Address: str doina
2025-04-28 16:58:56,807 [11] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 3
2025-04-28 16:58:56,807 [11] INFO BasketballPersistance.repository.BDRepositoryPurchase - Game found: Boston Celtics - Chicago Bulls
2025-04-28 16:58:56,808 [11] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 6
2025-04-28 16:58:56,808 [11] INFO BasketballPersistance.repository.BDRepositoryPurchase - Client found: Name: denis, Address: str doina
2025-04-28 16:58:56,808 [11] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 4
2025-04-28 16:58:56,808 [11] INFO BasketballPersistance.repository.BDRepositoryPurchase - Game found: Memphis Grizzlies - Oklahoma City Thunder
2025-04-28 16:58:56,808 [11] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 6
2025-04-28 16:58:56,808 [11] INFO BasketballPersistance.repository.BDRepositoryPurchase - Client found: Name: denis, Address: str doina
2025-04-28 16:58:56,808 [11] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 3
2025-04-28 16:58:56,808 [11] INFO BasketballPersistance.repository.BDRepositoryPurchase - Game found: Boston Celtics - Chicago Bulls
2025-04-28 16:58:56,808 [11] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 5
2025-04-28 16:58:56,809 [11] INFO BasketballPersistance.repository.BDRepositoryPurchase - Client found: Name: denis, Address: str doina nr 4
2025-04-28 16:58:56,809 [11] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 4
2025-04-28 16:58:56,809 [11] INFO BasketballPersistance.repository.BDRepositoryPurchase - Game found: Memphis Grizzlies - Oklahoma City Thunder
2025-04-28 16:58:56,809 [11] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 6
2025-04-28 16:58:56,809 [11] INFO BasketballPersistance.repository.BDRepositoryPurchase - Client found: Name: denis, Address: str doina
2025-04-28 16:58:56,809 [11] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 4
2025-04-28 16:58:56,809 [11] INFO BasketballPersistance.repository.BDRepositoryPurchase - Game found: Memphis Grizzlies - Oklahoma City Thunder
2025-04-28 16:58:56,809 [11] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 6
2025-04-28 16:58:56,809 [11] INFO BasketballPersistance.repository.BDRepositoryPurchase - Client found: Name: denis, Address: str doina
2025-04-28 16:58:56,810 [11] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 3
2025-04-28 16:58:56,810 [11] INFO BasketballPersistance.repository.BDRepositoryPurchase - Game found: Boston Celtics - Chicago Bulls
2025-04-28 16:58:56,810 [11] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 6
2025-04-28 16:58:56,810 [11] INFO BasketballPersistance.repository.BDRepositoryPurchase - Client found: Name: denis, Address: str doina
2025-04-28 16:58:56,810 [11] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 3
2025-04-28 16:58:56,810 [11] INFO BasketballPersistance.repository.BDRepositoryPurchase - Game found: Boston Celtics - Chicago Bulls
2025-04-28 16:58:56,810 [11] INFO BasketballPersistance.repository.BDRepositoryPurchase - Purchases were filtered
2025-04-28 16:58:56,811 [11] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = GET_PURCHASES was sent
2025-04-28 16:59:08,254 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = GET_PURCHASES was received
2025-04-28 16:59:08,255 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Purchases filtered for client = Name: paul, Address: 
2025-04-28 16:59:08,255 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Filter by client name is starting...
2025-04-28 16:59:08,255 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 9
2025-04-28 16:59:08,255 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Client found: Name: paul, Address: cluj
2025-04-28 16:59:08,256 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 4
2025-04-28 16:59:08,256 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Game found: Memphis Grizzlies - Oklahoma City Thunder
2025-04-28 16:59:08,256 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Purchases were filtered
2025-04-28 16:59:08,256 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = GET_PURCHASES was sent
2025-04-28 16:59:18,424 [11] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGOUT was received
2025-04-28 16:59:18,424 [11] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = marcel and password = marcel1234.
2025-04-28 16:59:18,425 [11] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-04-28 17:07:26,995 [1] INFO BasketballServer.StartServer - Starting basketball server
2025-04-28 17:07:27,010 [1] INFO BasketballServer.StartServer - Reading properties from app.config...
2025-04-28 17:07:27,011 [1] DEBUG BasketballServer.utils.JsonConcurrentServer - Creating JsonConcurrentServer...
2025-04-28 17:07:27,015 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-04-28 17:07:49,852 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-04-28 17:07:49,894 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-04-28 17:07:49,917 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-04-28 17:07:49,925 [9] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = denis and password = denis1234.
2025-04-28 17:07:49,953 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-04-28 17:07:50,959 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = GET_GAMES was received
2025-04-28 17:07:50,965 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = GET_GAMES was sent
2025-04-28 17:07:58,075 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = GET_PURCHASES was received
2025-04-28 17:07:58,076 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Purchases filtered for client = Name: denis, Address: 
2025-04-28 17:07:58,077 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Filter by client name is starting...
2025-04-28 17:07:58,078 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 6
2025-04-28 17:07:58,079 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Client found: Name: denis, Address: str doina
2025-04-28 17:07:58,079 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 3
2025-04-28 17:07:58,080 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Game found: Boston Celtics - Chicago Bulls
2025-04-28 17:07:58,080 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 6
2025-04-28 17:07:58,080 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Client found: Name: denis, Address: str doina
2025-04-28 17:07:58,080 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 4
2025-04-28 17:07:58,080 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Game found: Memphis Grizzlies - Oklahoma City Thunder
2025-04-28 17:07:58,080 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 6
2025-04-28 17:07:58,081 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Client found: Name: denis, Address: str doina
2025-04-28 17:07:58,081 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 3
2025-04-28 17:07:58,081 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Game found: Boston Celtics - Chicago Bulls
2025-04-28 17:07:58,081 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 5
2025-04-28 17:07:58,081 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Client found: Name: denis, Address: str doina nr 4
2025-04-28 17:07:58,081 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 4
2025-04-28 17:07:58,082 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Game found: Memphis Grizzlies - Oklahoma City Thunder
2025-04-28 17:07:58,082 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 6
2025-04-28 17:07:58,082 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Client found: Name: denis, Address: str doina
2025-04-28 17:07:58,082 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 4
2025-04-28 17:07:58,082 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Game found: Memphis Grizzlies - Oklahoma City Thunder
2025-04-28 17:07:58,082 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 6
2025-04-28 17:07:58,083 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Client found: Name: denis, Address: str doina
2025-04-28 17:07:58,083 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 3
2025-04-28 17:07:58,083 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Game found: Boston Celtics - Chicago Bulls
2025-04-28 17:07:58,083 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 6
2025-04-28 17:07:58,083 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Client found: Name: denis, Address: str doina
2025-04-28 17:07:58,083 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 3
2025-04-28 17:07:58,084 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Game found: Boston Celtics - Chicago Bulls
2025-04-28 17:07:58,084 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Purchases were filtered
2025-04-28 17:07:58,085 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = GET_PURCHASES was sent
2025-04-28 17:14:27,819 [1] INFO BasketballServer.StartServer - Starting basketball server
2025-04-28 17:14:27,829 [1] INFO BasketballServer.StartServer - Reading properties from app.config...
2025-04-28 17:14:27,830 [1] DEBUG BasketballServer.utils.JsonConcurrentServer - Creating JsonConcurrentServer...
2025-04-28 17:14:27,835 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-04-28 17:14:35,845 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-04-28 17:14:35,888 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-04-28 17:14:35,913 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-04-28 17:14:35,923 [9] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = denis and password = denis1234.
2025-04-28 17:14:35,950 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-04-28 17:14:36,962 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = GET_GAMES was received
2025-04-28 17:14:36,969 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = GET_GAMES was sent
2025-04-28 17:14:52,784 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = GET_PURCHASES was received
2025-04-28 17:14:52,784 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Purchases filtered for client = Name: denis, Address: 
2025-04-28 17:14:52,785 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Filter by client name is starting...
2025-04-28 17:14:52,786 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 6
2025-04-28 17:14:52,787 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Client found: Name: denis, Address: str doina
2025-04-28 17:14:52,788 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 3
2025-04-28 17:14:52,788 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Game found: Boston Celtics - Chicago Bulls
2025-04-28 17:14:52,788 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 6
2025-04-28 17:14:52,788 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Client found: Name: denis, Address: str doina
2025-04-28 17:14:52,788 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 4
2025-04-28 17:14:52,788 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Game found: Memphis Grizzlies - Oklahoma City Thunder
2025-04-28 17:14:52,788 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 6
2025-04-28 17:14:52,789 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Client found: Name: denis, Address: str doina
2025-04-28 17:14:52,789 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 3
2025-04-28 17:14:52,789 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Game found: Boston Celtics - Chicago Bulls
2025-04-28 17:14:52,789 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 5
2025-04-28 17:14:52,789 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Client found: Name: denis, Address: str doina nr 4
2025-04-28 17:14:52,789 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 4
2025-04-28 17:14:52,789 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Game found: Memphis Grizzlies - Oklahoma City Thunder
2025-04-28 17:14:52,789 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 6
2025-04-28 17:14:52,790 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Client found: Name: denis, Address: str doina
2025-04-28 17:14:52,790 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 4
2025-04-28 17:14:52,790 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Game found: Memphis Grizzlies - Oklahoma City Thunder
2025-04-28 17:14:52,790 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 6
2025-04-28 17:14:52,790 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Client found: Name: denis, Address: str doina
2025-04-28 17:14:52,790 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 3
2025-04-28 17:14:52,790 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Game found: Boston Celtics - Chicago Bulls
2025-04-28 17:14:52,791 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 6
2025-04-28 17:14:52,791 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Client found: Name: denis, Address: str doina
2025-04-28 17:14:52,791 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 3
2025-04-28 17:14:52,791 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Game found: Boston Celtics - Chicago Bulls
2025-04-28 17:14:52,791 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Purchases were filtered
2025-04-28 17:14:52,792 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = GET_PURCHASES was sent
2025-04-28 17:15:50,714 [9] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\mpp-proiect-csharp-denton1612\TemaProiect3\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-04-28 17:15:51,725 [9] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\mpp-proiect-csharp-denton1612\TemaProiect3\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-04-28 17:15:52,737 [9] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\mpp-proiect-csharp-denton1612\TemaProiect3\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-04-28 17:15:53,749 [9] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\mpp-proiect-csharp-denton1612\TemaProiect3\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-04-28 17:15:54,763 [9] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\mpp-proiect-csharp-denton1612\TemaProiect3\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-04-28 17:15:55,777 [9] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\mpp-proiect-csharp-denton1612\TemaProiect3\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-04-28 17:15:56,790 [9] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\mpp-proiect-csharp-denton1612\TemaProiect3\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-04-28 17:15:57,805 [9] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\mpp-proiect-csharp-denton1612\TemaProiect3\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-04-28 17:15:58,819 [9] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\mpp-proiect-csharp-denton1612\TemaProiect3\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-04-28 17:15:59,829 [9] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\mpp-proiect-csharp-denton1612\TemaProiect3\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-04-28 17:16:00,834 [9] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\mpp-proiect-csharp-denton1612\TemaProiect3\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-04-28 17:16:01,849 [9] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\mpp-proiect-csharp-denton1612\TemaProiect3\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-04-28 17:16:02,863 [9] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\mpp-proiect-csharp-denton1612\TemaProiect3\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-04-28 17:16:03,879 [9] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\mpp-proiect-csharp-denton1612\TemaProiect3\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-04-28 17:16:04,894 [9] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\mpp-proiect-csharp-denton1612\TemaProiect3\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-04-28 17:16:05,896 [9] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\mpp-proiect-csharp-denton1612\TemaProiect3\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-04-28 17:16:06,907 [9] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\mpp-proiect-csharp-denton1612\TemaProiect3\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-04-28 17:16:07,911 [9] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\mpp-proiect-csharp-denton1612\TemaProiect3\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-04-28 17:16:08,926 [9] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\mpp-proiect-csharp-denton1612\TemaProiect3\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-04-28 17:16:09,941 [9] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\mpp-proiect-csharp-denton1612\TemaProiect3\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-04-28 17:16:10,954 [9] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\mpp-proiect-csharp-denton1612\TemaProiect3\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-04-28 17:16:11,968 [9] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\mpp-proiect-csharp-denton1612\TemaProiect3\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-04-28 17:16:12,983 [9] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\mpp-proiect-csharp-denton1612\TemaProiect3\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-04-28 17:16:13,993 [9] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\mpp-proiect-csharp-denton1612\TemaProiect3\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-04-28 17:16:15,006 [9] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\mpp-proiect-csharp-denton1612\TemaProiect3\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-04-28 17:16:16,020 [9] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\mpp-proiect-csharp-denton1612\TemaProiect3\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-04-28 17:16:17,027 [9] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\mpp-proiect-csharp-denton1612\TemaProiect3\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-04-28 17:16:18,031 [9] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\mpp-proiect-csharp-denton1612\TemaProiect3\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-04-28 17:16:19,041 [9] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\mpp-proiect-csharp-denton1612\TemaProiect3\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-04-28 17:16:20,050 [9] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\mpp-proiect-csharp-denton1612\TemaProiect3\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-04-28 17:16:21,060 [9] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\mpp-proiect-csharp-denton1612\TemaProiect3\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-04-28 17:16:22,076 [9] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\mpp-proiect-csharp-denton1612\TemaProiect3\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-04-28 17:16:23,076 [9] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\mpp-proiect-csharp-denton1612\TemaProiect3\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-04-28 17:16:24,089 [9] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\mpp-proiect-csharp-denton1612\TemaProiect3\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-04-28 17:16:25,104 [9] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\mpp-proiect-csharp-denton1612\TemaProiect3\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-04-28 17:16:26,116 [9] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\mpp-proiect-csharp-denton1612\TemaProiect3\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-04-28 17:16:27,128 [9] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\mpp-proiect-csharp-denton1612\TemaProiect3\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-04-28 17:16:28,140 [9] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\mpp-proiect-csharp-denton1612\TemaProiect3\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-04-28 17:16:29,154 [9] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\mpp-proiect-csharp-denton1612\TemaProiect3\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-04-28 17:16:30,169 [9] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\mpp-proiect-csharp-denton1612\TemaProiect3\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-04-28 17:16:31,185 [9] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\mpp-proiect-csharp-denton1612\TemaProiect3\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-04-28 17:16:32,187 [9] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\mpp-proiect-csharp-denton1612\TemaProiect3\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-04-28 17:16:33,192 [9] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\mpp-proiect-csharp-denton1612\TemaProiect3\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-04-28 17:16:34,199 [9] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\mpp-proiect-csharp-denton1612\TemaProiect3\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-04-28 17:16:35,206 [9] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\mpp-proiect-csharp-denton1612\TemaProiect3\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-04-28 17:16:36,212 [9] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\mpp-proiect-csharp-denton1612\TemaProiect3\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-04-28 17:16:37,225 [9] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\mpp-proiect-csharp-denton1612\TemaProiect3\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-04-28 17:16:38,239 [9] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\mpp-proiect-csharp-denton1612\TemaProiect3\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-04-28 17:16:39,247 [9] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\mpp-proiect-csharp-denton1612\TemaProiect3\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-04-28 17:16:40,262 [9] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\mpp-proiect-csharp-denton1612\TemaProiect3\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-04-28 17:16:41,266 [9] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\mpp-proiect-csharp-denton1612\TemaProiect3\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-04-28 17:16:42,279 [9] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\mpp-proiect-csharp-denton1612\TemaProiect3\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-04-28 17:19:14,022 [1] INFO BasketballServer.StartServer - Starting basketball server
2025-04-28 17:19:14,038 [1] INFO BasketballServer.StartServer - Reading properties from app.config...
2025-04-28 17:19:14,040 [1] DEBUG BasketballServer.utils.JsonConcurrentServer - Creating JsonConcurrentServer...
2025-04-28 17:19:14,044 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-04-28 17:19:44,665 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-04-28 17:19:44,702 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-04-28 17:19:44,727 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-04-28 17:19:44,735 [9] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = denis and password = denis1234.
2025-04-28 17:19:44,764 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-04-28 17:19:45,772 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = GET_GAMES was received
2025-04-28 17:19:45,779 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = GET_GAMES was sent
2025-04-28 17:19:51,258 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = GET_PURCHASES was received
2025-04-28 17:19:51,258 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Purchases filtered for client = Name: denis, Address: 
2025-04-28 17:19:51,259 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Filter by client name is starting...
2025-04-28 17:19:51,260 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 6
2025-04-28 17:19:51,260 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Client found: Name: denis, Address: str doina
2025-04-28 17:19:51,261 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 3
2025-04-28 17:19:51,261 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Game found: Boston Celtics - Chicago Bulls
2025-04-28 17:19:51,261 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 6
2025-04-28 17:19:51,261 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Client found: Name: denis, Address: str doina
2025-04-28 17:19:51,261 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 4
2025-04-28 17:19:51,262 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Game found: Memphis Grizzlies - Oklahoma City Thunder
2025-04-28 17:19:51,262 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 6
2025-04-28 17:19:51,262 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Client found: Name: denis, Address: str doina
2025-04-28 17:19:51,262 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 3
2025-04-28 17:19:51,262 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Game found: Boston Celtics - Chicago Bulls
2025-04-28 17:19:51,262 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 5
2025-04-28 17:19:51,262 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Client found: Name: denis, Address: str doina nr 4
2025-04-28 17:19:51,262 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 4
2025-04-28 17:19:51,263 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Game found: Memphis Grizzlies - Oklahoma City Thunder
2025-04-28 17:19:51,263 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 6
2025-04-28 17:19:51,263 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Client found: Name: denis, Address: str doina
2025-04-28 17:19:51,263 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 4
2025-04-28 17:19:51,263 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Game found: Memphis Grizzlies - Oklahoma City Thunder
2025-04-28 17:19:51,263 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 6
2025-04-28 17:19:51,263 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Client found: Name: denis, Address: str doina
2025-04-28 17:19:51,264 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 3
2025-04-28 17:19:51,264 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Game found: Boston Celtics - Chicago Bulls
2025-04-28 17:19:51,264 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 6
2025-04-28 17:19:51,264 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Client found: Name: denis, Address: str doina
2025-04-28 17:19:51,264 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 3
2025-04-28 17:19:51,264 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Game found: Boston Celtics - Chicago Bulls
2025-04-28 17:19:51,264 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Purchases were filtered
2025-04-28 17:19:51,265 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = GET_PURCHASES was sent
2025-04-28 17:23:10,773 [9] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\mpp-proiect-csharp-denton1612\TemaProiect3\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-04-28 17:23:11,782 [9] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\mpp-proiect-csharp-denton1612\TemaProiect3\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-04-28 17:23:12,788 [9] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\mpp-proiect-csharp-denton1612\TemaProiect3\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-04-28 17:23:13,794 [9] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\mpp-proiect-csharp-denton1612\TemaProiect3\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-04-28 17:23:14,804 [9] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\mpp-proiect-csharp-denton1612\TemaProiect3\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-04-28 17:23:15,819 [9] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\mpp-proiect-csharp-denton1612\TemaProiect3\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-04-28 17:23:16,279 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-04-28 17:23:16,280 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-04-28 17:23:16,300 [12] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-04-28 17:23:16,300 [12] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = denis and password = denis1234.
2025-04-28 17:23:16,301 [12] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = ERROR was sent
2025-04-28 17:23:16,824 [9] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\mpp-proiect-csharp-denton1612\TemaProiect3\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-04-28 17:23:17,839 [9] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\mpp-proiect-csharp-denton1612\TemaProiect3\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-04-28 17:23:18,851 [9] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\mpp-proiect-csharp-denton1612\TemaProiect3\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-04-28 17:23:19,857 [9] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\mpp-proiect-csharp-denton1612\TemaProiect3\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-04-28 17:23:20,869 [9] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\mpp-proiect-csharp-denton1612\TemaProiect3\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-04-28 17:23:26,626 [1] INFO BasketballServer.StartServer - Starting basketball server
2025-04-28 17:23:26,635 [1] INFO BasketballServer.StartServer - Reading properties from app.config...
2025-04-28 17:23:26,637 [1] DEBUG BasketballServer.utils.JsonConcurrentServer - Creating JsonConcurrentServer...
2025-04-28 17:23:26,641 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-04-28 17:23:34,316 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-04-28 17:23:34,317 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-04-28 17:23:34,343 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-04-28 17:23:34,346 [9] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = denis and password = denis1234.
2025-04-28 17:23:34,373 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-04-28 17:23:35,385 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = GET_GAMES was received
2025-04-28 17:23:35,391 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = GET_GAMES was sent
2025-04-28 17:23:45,407 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = GET_PURCHASES was received
2025-04-28 17:23:45,408 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Purchases filtered for client = Name: denis, Address: 
2025-04-28 17:23:45,408 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Filter by client name is starting...
2025-04-28 17:23:45,409 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 6
2025-04-28 17:23:45,410 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Client found: Name: denis, Address: str doina
2025-04-28 17:23:45,410 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 3
2025-04-28 17:23:45,411 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Game found: Boston Celtics - Chicago Bulls
2025-04-28 17:23:45,411 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 6
2025-04-28 17:23:45,411 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Client found: Name: denis, Address: str doina
2025-04-28 17:23:45,411 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 4
2025-04-28 17:23:45,411 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Game found: Memphis Grizzlies - Oklahoma City Thunder
2025-04-28 17:23:45,411 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 6
2025-04-28 17:23:45,411 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Client found: Name: denis, Address: str doina
2025-04-28 17:23:45,411 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 3
2025-04-28 17:23:45,412 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Game found: Boston Celtics - Chicago Bulls
2025-04-28 17:23:45,412 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 5
2025-04-28 17:23:45,412 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Client found: Name: denis, Address: str doina nr 4
2025-04-28 17:23:45,412 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 4
2025-04-28 17:23:45,412 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Game found: Memphis Grizzlies - Oklahoma City Thunder
2025-04-28 17:23:45,412 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 6
2025-04-28 17:23:45,412 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Client found: Name: denis, Address: str doina
2025-04-28 17:23:45,413 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 4
2025-04-28 17:23:45,413 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Game found: Memphis Grizzlies - Oklahoma City Thunder
2025-04-28 17:23:45,413 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 6
2025-04-28 17:23:45,413 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Client found: Name: denis, Address: str doina
2025-04-28 17:23:45,413 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 3
2025-04-28 17:23:45,413 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Game found: Boston Celtics - Chicago Bulls
2025-04-28 17:23:45,413 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 6
2025-04-28 17:23:45,414 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Client found: Name: denis, Address: str doina
2025-04-28 17:23:45,414 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 3
2025-04-28 17:23:45,414 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Game found: Boston Celtics - Chicago Bulls
2025-04-28 17:23:45,414 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Purchases were filtered
2025-04-28 17:23:45,415 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = GET_PURCHASES was sent
2025-04-28 17:23:50,878 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = GET_PURCHASES was received
2025-04-28 17:23:50,879 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Purchases filtered for client = Name: denis, Address: str doina
2025-04-28 17:23:50,879 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Filter by client name and address is starting...
2025-04-28 17:23:50,879 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 6
2025-04-28 17:23:50,879 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Client found: Name: denis, Address: str doina
2025-04-28 17:23:50,880 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 3
2025-04-28 17:23:50,880 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Game found: Boston Celtics - Chicago Bulls
2025-04-28 17:23:50,880 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 6
2025-04-28 17:23:50,880 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Client found: Name: denis, Address: str doina
2025-04-28 17:23:50,880 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 4
2025-04-28 17:23:50,880 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Game found: Memphis Grizzlies - Oklahoma City Thunder
2025-04-28 17:23:50,880 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 6
2025-04-28 17:23:50,880 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Client found: Name: denis, Address: str doina
2025-04-28 17:23:50,881 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 3
2025-04-28 17:23:50,881 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Game found: Boston Celtics - Chicago Bulls
2025-04-28 17:23:50,881 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 6
2025-04-28 17:23:50,881 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Client found: Name: denis, Address: str doina
2025-04-28 17:23:50,881 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 4
2025-04-28 17:23:50,881 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Game found: Memphis Grizzlies - Oklahoma City Thunder
2025-04-28 17:23:50,881 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 6
2025-04-28 17:23:50,881 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Client found: Name: denis, Address: str doina
2025-04-28 17:23:50,882 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 3
2025-04-28 17:23:50,882 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Game found: Boston Celtics - Chicago Bulls
2025-04-28 17:23:50,882 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 6
2025-04-28 17:23:50,882 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Client found: Name: denis, Address: str doina
2025-04-28 17:23:50,882 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 3
2025-04-28 17:23:50,882 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Game found: Boston Celtics - Chicago Bulls
2025-04-28 17:23:50,882 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Purchases were filtered
2025-04-28 17:23:50,883 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = GET_PURCHASES was sent
2025-04-28 17:27:37,816 [1] INFO BasketballServer.StartServer - Starting basketball server
2025-04-28 17:27:37,834 [1] INFO BasketballServer.StartServer - Reading properties from app.config...
2025-04-28 17:27:37,835 [1] DEBUG BasketballServer.utils.JsonConcurrentServer - Creating JsonConcurrentServer...
2025-04-28 17:27:37,839 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-04-28 17:28:36,907 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-04-28 17:28:36,948 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-04-28 17:28:36,976 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-04-28 17:28:36,984 [9] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = denis and password = denis1234.
2025-04-28 17:28:37,018 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-04-28 17:28:38,021 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = GET_GAMES was received
2025-04-28 17:28:38,028 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = GET_GAMES was sent
2025-04-28 17:28:43,813 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-04-28 17:28:43,813 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-04-28 17:28:43,833 [11] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-04-28 17:28:43,833 [11] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = luis and password = luis1234.
2025-04-28 17:28:43,834 [11] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-04-28 17:28:44,842 [11] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = GET_GAMES was received
2025-04-28 17:28:44,842 [11] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = GET_GAMES was sent
2025-04-28 17:28:53,698 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-04-28 17:28:53,698 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-04-28 17:28:53,717 [12] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-04-28 17:28:53,717 [12] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = marcel and password = marcel1234.
2025-04-28 17:28:53,718 [12] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-04-28 17:28:54,725 [12] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = GET_GAMES was received
2025-04-28 17:28:54,726 [12] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = GET_GAMES was sent
2025-04-28 17:29:22,569 [11] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = BUY_TICKET was received
2025-04-28 17:29:22,571 [11] INFO BasketballPersistance.repository.BDRepositoryClient - Adding client: Name: mire, Address: cluj
2025-04-28 17:29:22,574 [11] INFO BasketballPersistance.repository.BDRepositoryClient - Client Name: mire, Address: cluj was added.
2025-04-28 17:29:22,574 [11] INFO BasketballPersistance.repository.BDRepositoryPurchase - Adding purchase: BasketballModel.domain.Purchase
2025-04-28 17:29:22,577 [11] INFO BasketballPersistance.repository.BDRepositoryPurchase - Purchase was added.
2025-04-28 17:29:22,582 [11] DEBUG BasketballNetworking.json_protocol.ClientWorker - Purchase was made in ServiceImpl for game = Memphis Grizzlies - Oklahoma City Thunder
2025-04-28 17:29:22,582 [11] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-04-28 17:29:22,582 [13] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = BUY_TICKET was sent
2025-04-28 17:29:22,582 [15] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = BUY_TICKET was sent
2025-04-28 17:29:22,582 [14] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = BUY_TICKET was sent
2025-04-28 17:29:35,281 [12] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = GET_PURCHASES was received
2025-04-28 17:29:35,281 [12] DEBUG BasketballNetworking.json_protocol.ClientWorker - Purchases filtered for client = Name: mire, Address: 
2025-04-28 17:29:35,282 [12] INFO BasketballPersistance.repository.BDRepositoryPurchase - Filter by client name is starting...
2025-04-28 17:29:35,283 [12] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 13
2025-04-28 17:29:35,283 [12] INFO BasketballPersistance.repository.BDRepositoryPurchase - Client found: Name: mire, Address: cluj
2025-04-28 17:29:35,283 [12] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 4
2025-04-28 17:29:35,283 [12] INFO BasketballPersistance.repository.BDRepositoryPurchase - Game found: Memphis Grizzlies - Oklahoma City Thunder
2025-04-28 17:29:35,284 [12] INFO BasketballPersistance.repository.BDRepositoryPurchase - Purchases were filtered
2025-04-28 17:29:35,284 [12] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = GET_PURCHASES was sent
2025-04-28 17:29:48,451 [12] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = GET_PURCHASES was received
2025-04-28 17:29:48,451 [12] DEBUG BasketballNetworking.json_protocol.ClientWorker - Purchases filtered for client = Name: denis, Address: 
2025-04-28 17:29:48,451 [12] INFO BasketballPersistance.repository.BDRepositoryPurchase - Filter by client name is starting...
2025-04-28 17:29:48,451 [12] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 6
2025-04-28 17:29:48,451 [12] INFO BasketballPersistance.repository.BDRepositoryPurchase - Client found: Name: denis, Address: str doina
2025-04-28 17:29:48,451 [12] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 3
2025-04-28 17:29:48,451 [12] INFO BasketballPersistance.repository.BDRepositoryPurchase - Game found: Boston Celtics - Chicago Bulls
2025-04-28 17:29:48,452 [12] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 6
2025-04-28 17:29:48,452 [12] INFO BasketballPersistance.repository.BDRepositoryPurchase - Client found: Name: denis, Address: str doina
2025-04-28 17:29:48,452 [12] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 4
2025-04-28 17:29:48,452 [12] INFO BasketballPersistance.repository.BDRepositoryPurchase - Game found: Memphis Grizzlies - Oklahoma City Thunder
2025-04-28 17:29:48,452 [12] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 6
2025-04-28 17:29:48,452 [12] INFO BasketballPersistance.repository.BDRepositoryPurchase - Client found: Name: denis, Address: str doina
2025-04-28 17:29:48,452 [12] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 3
2025-04-28 17:29:48,452 [12] INFO BasketballPersistance.repository.BDRepositoryPurchase - Game found: Boston Celtics - Chicago Bulls
2025-04-28 17:29:48,452 [12] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 5
2025-04-28 17:29:48,453 [12] INFO BasketballPersistance.repository.BDRepositoryPurchase - Client found: Name: denis, Address: str doina nr 4
2025-04-28 17:29:48,453 [12] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 4
2025-04-28 17:29:48,453 [12] INFO BasketballPersistance.repository.BDRepositoryPurchase - Game found: Memphis Grizzlies - Oklahoma City Thunder
2025-04-28 17:29:48,453 [12] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 6
2025-04-28 17:29:48,453 [12] INFO BasketballPersistance.repository.BDRepositoryPurchase - Client found: Name: denis, Address: str doina
2025-04-28 17:29:48,453 [12] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 4
2025-04-28 17:29:48,453 [12] INFO BasketballPersistance.repository.BDRepositoryPurchase - Game found: Memphis Grizzlies - Oklahoma City Thunder
2025-04-28 17:29:48,453 [12] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 6
2025-04-28 17:29:48,454 [12] INFO BasketballPersistance.repository.BDRepositoryPurchase - Client found: Name: denis, Address: str doina
2025-04-28 17:29:48,454 [12] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 3
2025-04-28 17:29:48,454 [12] INFO BasketballPersistance.repository.BDRepositoryPurchase - Game found: Boston Celtics - Chicago Bulls
2025-04-28 17:29:48,454 [12] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 6
2025-04-28 17:29:48,454 [12] INFO BasketballPersistance.repository.BDRepositoryPurchase - Client found: Name: denis, Address: str doina
2025-04-28 17:29:48,454 [12] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 3
2025-04-28 17:29:48,454 [12] INFO BasketballPersistance.repository.BDRepositoryPurchase - Game found: Boston Celtics - Chicago Bulls
2025-04-28 17:29:48,454 [12] INFO BasketballPersistance.repository.BDRepositoryPurchase - Purchases were filtered
2025-04-28 17:29:48,454 [12] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = GET_PURCHASES was sent
2025-04-28 17:30:01,616 [12] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = GET_PURCHASES was received
2025-04-28 17:30:01,616 [12] DEBUG BasketballNetworking.json_protocol.ClientWorker - Purchases filtered for client = Name: denis, Address: str doina
2025-04-28 17:30:01,617 [12] INFO BasketballPersistance.repository.BDRepositoryPurchase - Filter by client name and address is starting...
2025-04-28 17:30:01,617 [12] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 6
2025-04-28 17:30:01,617 [12] INFO BasketballPersistance.repository.BDRepositoryPurchase - Client found: Name: denis, Address: str doina
2025-04-28 17:30:01,617 [12] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 3
2025-04-28 17:30:01,617 [12] INFO BasketballPersistance.repository.BDRepositoryPurchase - Game found: Boston Celtics - Chicago Bulls
2025-04-28 17:30:01,618 [12] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 6
2025-04-28 17:30:01,618 [12] INFO BasketballPersistance.repository.BDRepositoryPurchase - Client found: Name: denis, Address: str doina
2025-04-28 17:30:01,618 [12] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 4
2025-04-28 17:30:01,618 [12] INFO BasketballPersistance.repository.BDRepositoryPurchase - Game found: Memphis Grizzlies - Oklahoma City Thunder
2025-04-28 17:30:01,618 [12] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 6
2025-04-28 17:30:01,618 [12] INFO BasketballPersistance.repository.BDRepositoryPurchase - Client found: Name: denis, Address: str doina
2025-04-28 17:30:01,618 [12] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 3
2025-04-28 17:30:01,618 [12] INFO BasketballPersistance.repository.BDRepositoryPurchase - Game found: Boston Celtics - Chicago Bulls
2025-04-28 17:30:01,618 [12] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 6
2025-04-28 17:30:01,619 [12] INFO BasketballPersistance.repository.BDRepositoryPurchase - Client found: Name: denis, Address: str doina
2025-04-28 17:30:01,619 [12] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 4
2025-04-28 17:30:01,619 [12] INFO BasketballPersistance.repository.BDRepositoryPurchase - Game found: Memphis Grizzlies - Oklahoma City Thunder
2025-04-28 17:30:01,619 [12] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 6
2025-04-28 17:30:01,619 [12] INFO BasketballPersistance.repository.BDRepositoryPurchase - Client found: Name: denis, Address: str doina
2025-04-28 17:30:01,619 [12] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 3
2025-04-28 17:30:01,619 [12] INFO BasketballPersistance.repository.BDRepositoryPurchase - Game found: Boston Celtics - Chicago Bulls
2025-04-28 17:30:01,619 [12] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 6
2025-04-28 17:30:01,619 [12] INFO BasketballPersistance.repository.BDRepositoryPurchase - Client found: Name: denis, Address: str doina
2025-04-28 17:30:01,619 [12] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 3
2025-04-28 17:30:01,619 [12] INFO BasketballPersistance.repository.BDRepositoryPurchase - Game found: Boston Celtics - Chicago Bulls
2025-04-28 17:30:01,620 [12] INFO BasketballPersistance.repository.BDRepositoryPurchase - Purchases were filtered
2025-04-28 17:30:01,620 [12] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = GET_PURCHASES was sent
2025-04-28 17:30:11,762 [12] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = GET_PURCHASES was received
2025-04-28 17:30:11,762 [12] DEBUG BasketballNetworking.json_protocol.ClientWorker - Purchases filtered for client = Name: denis, Address: str doina 4
2025-04-28 17:30:11,762 [12] INFO BasketballPersistance.repository.BDRepositoryPurchase - Filter by client name and address is starting...
2025-04-28 17:30:11,762 [12] INFO BasketballPersistance.repository.BDRepositoryPurchase - Purchases were filtered
2025-04-28 17:30:11,763 [12] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = GET_PURCHASES was sent
2025-04-28 17:30:15,072 [12] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = GET_PURCHASES was received
2025-04-28 17:30:15,072 [12] DEBUG BasketballNetworking.json_protocol.ClientWorker - Purchases filtered for client = Name: denis, Address: 
2025-04-28 17:30:15,072 [12] INFO BasketballPersistance.repository.BDRepositoryPurchase - Filter by client name is starting...
2025-04-28 17:30:15,072 [12] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 6
2025-04-28 17:30:15,072 [12] INFO BasketballPersistance.repository.BDRepositoryPurchase - Client found: Name: denis, Address: str doina
2025-04-28 17:30:15,073 [12] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 3
2025-04-28 17:30:15,073 [12] INFO BasketballPersistance.repository.BDRepositoryPurchase - Game found: Boston Celtics - Chicago Bulls
2025-04-28 17:30:15,073 [12] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 6
2025-04-28 17:30:15,073 [12] INFO BasketballPersistance.repository.BDRepositoryPurchase - Client found: Name: denis, Address: str doina
2025-04-28 17:30:15,073 [12] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 4
2025-04-28 17:30:15,073 [12] INFO BasketballPersistance.repository.BDRepositoryPurchase - Game found: Memphis Grizzlies - Oklahoma City Thunder
2025-04-28 17:30:15,073 [12] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 6
2025-04-28 17:30:15,073 [12] INFO BasketballPersistance.repository.BDRepositoryPurchase - Client found: Name: denis, Address: str doina
2025-04-28 17:30:15,073 [12] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 3
2025-04-28 17:30:15,074 [12] INFO BasketballPersistance.repository.BDRepositoryPurchase - Game found: Boston Celtics - Chicago Bulls
2025-04-28 17:30:15,074 [12] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 5
2025-04-28 17:30:15,074 [12] INFO BasketballPersistance.repository.BDRepositoryPurchase - Client found: Name: denis, Address: str doina nr 4
2025-04-28 17:30:15,074 [12] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 4
2025-04-28 17:30:15,074 [12] INFO BasketballPersistance.repository.BDRepositoryPurchase - Game found: Memphis Grizzlies - Oklahoma City Thunder
2025-04-28 17:30:15,074 [12] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 6
2025-04-28 17:30:15,074 [12] INFO BasketballPersistance.repository.BDRepositoryPurchase - Client found: Name: denis, Address: str doina
2025-04-28 17:30:15,074 [12] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 4
2025-04-28 17:30:15,074 [12] INFO BasketballPersistance.repository.BDRepositoryPurchase - Game found: Memphis Grizzlies - Oklahoma City Thunder
2025-04-28 17:30:15,074 [12] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 6
2025-04-28 17:30:15,074 [12] INFO BasketballPersistance.repository.BDRepositoryPurchase - Client found: Name: denis, Address: str doina
2025-04-28 17:30:15,074 [12] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 3
2025-04-28 17:30:15,075 [12] INFO BasketballPersistance.repository.BDRepositoryPurchase - Game found: Boston Celtics - Chicago Bulls
2025-04-28 17:30:15,075 [12] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 6
2025-04-28 17:30:15,075 [12] INFO BasketballPersistance.repository.BDRepositoryPurchase - Client found: Name: denis, Address: str doina
2025-04-28 17:30:15,075 [12] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 3
2025-04-28 17:30:15,075 [12] INFO BasketballPersistance.repository.BDRepositoryPurchase - Game found: Boston Celtics - Chicago Bulls
2025-04-28 17:30:15,075 [12] INFO BasketballPersistance.repository.BDRepositoryPurchase - Purchases were filtered
2025-04-28 17:30:15,075 [12] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = GET_PURCHASES was sent
2025-04-28 17:30:21,919 [12] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = GET_PURCHASES was received
2025-04-28 17:30:21,919 [12] DEBUG BasketballNetworking.json_protocol.ClientWorker - Purchases filtered for client = Name: denis, Address: str doina nr 4
2025-04-28 17:30:21,919 [12] INFO BasketballPersistance.repository.BDRepositoryPurchase - Filter by client name and address is starting...
2025-04-28 17:30:21,919 [12] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 5
2025-04-28 17:30:21,920 [12] INFO BasketballPersistance.repository.BDRepositoryPurchase - Client found: Name: denis, Address: str doina nr 4
2025-04-28 17:30:21,920 [12] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 4
2025-04-28 17:30:21,920 [12] INFO BasketballPersistance.repository.BDRepositoryPurchase - Game found: Memphis Grizzlies - Oklahoma City Thunder
2025-04-28 17:30:21,920 [12] INFO BasketballPersistance.repository.BDRepositoryPurchase - Purchases were filtered
2025-04-28 17:30:21,920 [12] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = GET_PURCHASES was sent
2025-04-28 17:30:26,936 [12] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGOUT was received
2025-04-28 17:30:26,936 [12] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = marcel and password = marcel1234.
2025-04-28 17:30:26,937 [12] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-04-28 17:30:28,840 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGOUT was received
2025-04-28 17:30:28,840 [9] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = denis and password = denis1234.
2025-04-28 17:30:28,840 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-04-28 17:30:42,340 [11] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGOUT was received
2025-04-28 17:30:42,340 [11] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = luis and password = luis1234.
2025-04-28 17:30:42,340 [11] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-05-01 17:01:40,345 [1] INFO BasketballServer.StartServer - Starting basketball server
2025-05-01 17:01:40,364 [1] INFO BasketballServer.StartServer - Reading properties from app.config...
2025-05-01 17:01:40,368 [1] DEBUG BasketballServer.utils.JsonConcurrentServer - Creating JsonConcurrentServer...
2025-05-01 17:01:40,375 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-01 17:01:51,621 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-05-01 17:01:51,659 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-01 17:01:51,682 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-05-01 17:01:51,690 [9] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = denis and password = denis1234.
2025-05-01 17:01:51,833 [9] ERROR BasketballPersistance.repository.BDRepositoryCashier - Microsoft.Data.Sqlite.SqliteException (0x80004005): SQLite Error 1: 'no such table: cashiers'.
   at Microsoft.Data.Sqlite.SqliteException.ThrowExceptionForRC(Int32 rc, sqlite3 db)
   at Microsoft.Data.Sqlite.SqliteCommand.PrepareAndEnumerateStatements()+MoveNext()
   at Microsoft.Data.Sqlite.SqliteCommand.GetStatements()+MoveNext()
   at Microsoft.Data.Sqlite.SqliteDataReader.NextResult()
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReader(CommandBehavior behavior)
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteDbDataReader(CommandBehavior behavior)
   at BasketballPersistance.repository.BDRepositoryCashier.findByUsernameAndPassowrd(String username, String password) in C:\Users\dento\Desktop\github\mpp-proiect-csharp-denton1612\TemaProiect3\BasketballClientServer\BasketballPersistance\BDRepositoryCashier.cs:line 59
2025-05-01 17:01:51,841 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = ERROR was sent
2025-05-01 17:02:05,960 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-05-01 17:02:05,960 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-01 17:02:05,960 [11] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-05-01 17:02:05,961 [11] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = marcel and password = marcel1234.
2025-05-01 17:02:05,961 [11] ERROR BasketballPersistance.repository.BDRepositoryCashier - Microsoft.Data.Sqlite.SqliteException (0x80004005): SQLite Error 1: 'no such table: cashiers'.
   at Microsoft.Data.Sqlite.SqliteException.ThrowExceptionForRC(Int32 rc, sqlite3 db)
   at Microsoft.Data.Sqlite.SqliteCommand.PrepareAndEnumerateStatements()+MoveNext()
   at Microsoft.Data.Sqlite.SqliteCommand.GetStatements()+MoveNext()
   at Microsoft.Data.Sqlite.SqliteDataReader.NextResult()
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReader(CommandBehavior behavior)
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteDbDataReader(CommandBehavior behavior)
   at BasketballPersistance.repository.BDRepositoryCashier.findByUsernameAndPassowrd(String username, String password) in C:\Users\dento\Desktop\github\mpp-proiect-csharp-denton1612\TemaProiect3\BasketballClientServer\BasketballPersistance\BDRepositoryCashier.cs:line 59
2025-05-01 17:02:05,962 [11] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = ERROR was sent
2025-05-01 17:03:02,942 [1] INFO BasketballServer.StartServer - Starting basketball server
2025-05-01 17:03:02,952 [1] INFO BasketballServer.StartServer - Reading properties from app.config...
2025-05-01 17:03:02,953 [1] DEBUG BasketballServer.utils.JsonConcurrentServer - Creating JsonConcurrentServer...
2025-05-01 17:03:02,957 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-01 17:03:10,910 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-05-01 17:03:10,911 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-01 17:03:10,951 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-05-01 17:03:10,954 [9] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = marcel and password = marcel1234.
2025-05-01 17:03:10,970 [9] ERROR BasketballPersistance.repository.BDRepositoryCashier - Microsoft.Data.Sqlite.SqliteException (0x80004005): SQLite Error 1: 'no such table: cashiers'.
   at Microsoft.Data.Sqlite.SqliteException.ThrowExceptionForRC(Int32 rc, sqlite3 db)
   at Microsoft.Data.Sqlite.SqliteCommand.PrepareAndEnumerateStatements()+MoveNext()
   at Microsoft.Data.Sqlite.SqliteCommand.GetStatements()+MoveNext()
   at Microsoft.Data.Sqlite.SqliteDataReader.NextResult()
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReader(CommandBehavior behavior)
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteDbDataReader(CommandBehavior behavior)
   at BasketballPersistance.repository.BDRepositoryCashier.findByUsernameAndPassowrd(String username, String password) in C:\Users\dento\Desktop\github\mpp-proiect-csharp-denton1612\TemaProiect3\BasketballClientServer\BasketballPersistance\BDRepositoryCashier.cs:line 59
2025-05-01 17:03:10,978 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = ERROR was sent
2025-05-01 17:06:33,646 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-05-01 17:06:33,647 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-01 17:06:33,667 [12] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-05-01 17:06:33,667 [12] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = marcel and password = marcel1234.
2025-05-01 17:06:33,667 [12] ERROR BasketballPersistance.repository.BDRepositoryCashier - Microsoft.Data.Sqlite.SqliteException (0x80004005): SQLite Error 1: 'no such table: cashiers'.
   at Microsoft.Data.Sqlite.SqliteException.ThrowExceptionForRC(Int32 rc, sqlite3 db)
   at Microsoft.Data.Sqlite.SqliteCommand.PrepareAndEnumerateStatements()+MoveNext()
   at Microsoft.Data.Sqlite.SqliteCommand.GetStatements()+MoveNext()
   at Microsoft.Data.Sqlite.SqliteDataReader.NextResult()
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReader(CommandBehavior behavior)
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteDbDataReader(CommandBehavior behavior)
   at BasketballPersistance.repository.BDRepositoryCashier.findByUsernameAndPassowrd(String username, String password) in C:\Users\dento\Desktop\github\mpp-proiect-csharp-denton1612\TemaProiect3\BasketballClientServer\BasketballPersistance\BDRepositoryCashier.cs:line 59
2025-05-01 17:06:33,668 [12] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = ERROR was sent
2025-05-01 17:08:42,239 [1] INFO BasketballServer.StartServer - Starting basketball server
2025-05-01 17:08:42,255 [1] INFO BasketballServer.StartServer - Reading properties from app.config...
2025-05-01 17:08:42,257 [1] DEBUG BasketballServer.utils.JsonConcurrentServer - Creating JsonConcurrentServer...
2025-05-01 17:08:42,261 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-01 17:08:50,192 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-05-01 17:08:50,229 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-01 17:08:50,251 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-05-01 17:08:50,259 [9] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = marcel and password = marcel1234.
2025-05-01 17:08:50,272 [9] ERROR BasketballPersistance.repository.BDRepositoryCashier - System.ArgumentException: Connection string keyword 'c:\users\dento\desktop\github\mpp-proiect-csharp-denton1612\temaproiect3\basketballclientserver\basketballserver\bin\debug\net9.0\data source' is not supported. For a possible alternative, see https://go.microsoft.com/fwlink/?linkid=2142181.
   at Microsoft.Data.Sqlite.SqliteConnectionStringBuilder.GetIndex(String keyword)
   at Microsoft.Data.Sqlite.SqliteConnectionStringBuilder.set_Item(String keyword, Object value)
   at System.Data.Common.DbConnectionStringBuilder.set_ConnectionString(String value)
   at Microsoft.Data.Sqlite.SqliteConnectionStringBuilder..ctor(String connectionString)
   at Microsoft.Data.Sqlite.SqliteConnectionFactory.GetPoolGroup(String connectionString)
   at Microsoft.Data.Sqlite.SqliteConnection.set_ConnectionString(String value)
   at Microsoft.Data.Sqlite.SqliteConnection..ctor(String connectionString)
   at BasketballPersistance.utils.DbUtils.GetNewConnection() in C:\Users\dento\Desktop\github\mpp-proiect-csharp-denton1612\TemaProiect3\BasketballClientServer\BasketballPersistance\utils\DbUtils.cs:line 26
   at BasketballPersistance.utils.DbUtils.GetConenction() in C:\Users\dento\Desktop\github\mpp-proiect-csharp-denton1612\TemaProiect3\BasketballClientServer\BasketballPersistance\utils\DbUtils.cs:line 33
   at BasketballPersistance.repository.BDRepositoryCashier.findByUsernameAndPassowrd(String username, String password) in C:\Users\dento\Desktop\github\mpp-proiect-csharp-denton1612\TemaProiect3\BasketballClientServer\BasketballPersistance\BDRepositoryCashier.cs:line 39
2025-05-01 17:08:50,278 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = ERROR was sent
2025-05-01 17:09:01,993 [1] INFO BasketballServer.StartServer - Starting basketball server
2025-05-01 17:09:02,003 [1] INFO BasketballServer.StartServer - Reading properties from app.config...
2025-05-01 17:09:02,004 [1] DEBUG BasketballServer.utils.JsonConcurrentServer - Creating JsonConcurrentServer...
2025-05-01 17:09:02,008 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-01 17:09:06,512 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-05-01 17:09:06,513 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-01 17:09:06,552 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-05-01 17:09:06,554 [9] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = marcel and password = marcel1234.
2025-05-01 17:09:06,561 [9] ERROR BasketballPersistance.repository.BDRepositoryCashier - System.ArgumentException: Connection string keyword 'c:\users\dento\desktop\github\mpp-proiect-csharp-denton1612\temaproiect3\basketballclientserver\basketballserver\bin\debug\net9.0\data source' is not supported. For a possible alternative, see https://go.microsoft.com/fwlink/?linkid=2142181.
   at Microsoft.Data.Sqlite.SqliteConnectionStringBuilder.GetIndex(String keyword)
   at Microsoft.Data.Sqlite.SqliteConnectionStringBuilder.set_Item(String keyword, Object value)
   at System.Data.Common.DbConnectionStringBuilder.set_ConnectionString(String value)
   at Microsoft.Data.Sqlite.SqliteConnectionStringBuilder..ctor(String connectionString)
   at Microsoft.Data.Sqlite.SqliteConnectionFactory.GetPoolGroup(String connectionString)
   at Microsoft.Data.Sqlite.SqliteConnection.set_ConnectionString(String value)
   at Microsoft.Data.Sqlite.SqliteConnection..ctor(String connectionString)
   at BasketballPersistance.utils.DbUtils.GetNewConnection() in C:\Users\dento\Desktop\github\mpp-proiect-csharp-denton1612\TemaProiect3\BasketballClientServer\BasketballPersistance\utils\DbUtils.cs:line 26
   at BasketballPersistance.utils.DbUtils.GetConenction() in C:\Users\dento\Desktop\github\mpp-proiect-csharp-denton1612\TemaProiect3\BasketballClientServer\BasketballPersistance\utils\DbUtils.cs:line 33
   at BasketballPersistance.repository.BDRepositoryCashier.findByUsernameAndPassowrd(String username, String password) in C:\Users\dento\Desktop\github\mpp-proiect-csharp-denton1612\TemaProiect3\BasketballClientServer\BasketballPersistance\BDRepositoryCashier.cs:line 39
2025-05-01 17:09:06,568 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = ERROR was sent
2025-05-01 17:10:03,343 [1] INFO BasketballServer.StartServer - Starting basketball server
2025-05-01 17:10:03,353 [1] INFO BasketballServer.StartServer - Reading properties from app.config...
2025-05-01 17:10:03,354 [1] DEBUG BasketballServer.utils.JsonConcurrentServer - Creating JsonConcurrentServer...
2025-05-01 17:10:03,358 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-01 17:10:18,857 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-05-01 17:10:18,858 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-01 17:10:18,898 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-05-01 17:10:18,900 [9] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = marcel and password = marcel1234.
2025-05-01 17:10:18,923 [9] ERROR BasketballPersistance.repository.BDRepositoryCashier - Microsoft.Data.Sqlite.SqliteException (0x80004005): SQLite Error 1: 'no such table: cashiers'.
   at Microsoft.Data.Sqlite.SqliteException.ThrowExceptionForRC(Int32 rc, sqlite3 db)
   at Microsoft.Data.Sqlite.SqliteCommand.PrepareAndEnumerateStatements()+MoveNext()
   at Microsoft.Data.Sqlite.SqliteCommand.GetStatements()+MoveNext()
   at Microsoft.Data.Sqlite.SqliteDataReader.NextResult()
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReader(CommandBehavior behavior)
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteDbDataReader(CommandBehavior behavior)
   at BasketballPersistance.repository.BDRepositoryCashier.findByUsernameAndPassowrd(String username, String password) in C:\Users\dento\Desktop\github\mpp-proiect-csharp-denton1612\TemaProiect3\BasketballClientServer\BasketballPersistance\BDRepositoryCashier.cs:line 59
2025-05-01 17:10:18,931 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = ERROR was sent
2025-05-01 17:25:14,561 [1] INFO BasketballServer.StartServer - Starting basketball server
2025-05-01 17:25:14,577 [1] INFO BasketballServer.StartServer - Reading properties from app.config...
2025-05-01 17:25:14,578 [1] DEBUG BasketballServer.utils.JsonConcurrentServer - Creating JsonConcurrentServer...
2025-05-01 17:25:14,582 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-01 17:25:24,430 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-05-01 17:25:24,432 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-01 17:25:24,472 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-05-01 17:25:24,475 [9] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = marcel and password = marcel1234.
2025-05-01 17:25:24,485 [9] ERROR BasketballPersistance.repository.BDRepositoryCashier - System.NullReferenceException: Object reference not set to an instance of an object.
   at BasketballPersistance.utils.DbUtils.GetNewConnection() in C:\Users\dento\Desktop\github\mpp-proiect-csharp-denton1612\TemaProiect3\BasketballClientServer\BasketballPersistance\utils\DbUtils.cs:line 25
   at BasketballPersistance.utils.DbUtils.GetConenction() in C:\Users\dento\Desktop\github\mpp-proiect-csharp-denton1612\TemaProiect3\BasketballClientServer\BasketballPersistance\utils\DbUtils.cs:line 33
   at BasketballPersistance.repository.BDRepositoryCashier.findByUsernameAndPassowrd(String username, String password) in C:\Users\dento\Desktop\github\mpp-proiect-csharp-denton1612\TemaProiect3\BasketballClientServer\BasketballPersistance\BDRepositoryCashier.cs:line 39
2025-05-01 17:25:24,491 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = ERROR was sent
2025-05-01 17:26:29,247 [1] INFO BasketballServer.StartServer - Starting basketball server
2025-05-01 17:26:29,263 [1] INFO BasketballServer.StartServer - Reading properties from app.config...
2025-05-01 17:26:29,265 [1] DEBUG BasketballServer.utils.JsonConcurrentServer - Creating JsonConcurrentServer...
2025-05-01 17:26:29,269 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-01 17:26:37,655 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-05-01 17:26:37,656 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-01 17:26:37,697 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-05-01 17:26:37,700 [9] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = marcel and password = marcel1234.
2025-05-01 17:26:37,714 [9] ERROR BasketballPersistance.repository.BDRepositoryCashier - Microsoft.Data.Sqlite.SqliteException (0x80004005): SQLite Error 1: 'no such table: cashiers'.
   at Microsoft.Data.Sqlite.SqliteException.ThrowExceptionForRC(Int32 rc, sqlite3 db)
   at Microsoft.Data.Sqlite.SqliteCommand.PrepareAndEnumerateStatements()+MoveNext()
   at Microsoft.Data.Sqlite.SqliteCommand.GetStatements()+MoveNext()
   at Microsoft.Data.Sqlite.SqliteDataReader.NextResult()
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReader(CommandBehavior behavior)
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteDbDataReader(CommandBehavior behavior)
   at BasketballPersistance.repository.BDRepositoryCashier.findByUsernameAndPassowrd(String username, String password) in C:\Users\dento\Desktop\github\mpp-proiect-csharp-denton1612\TemaProiect3\BasketballClientServer\BasketballPersistance\BDRepositoryCashier.cs:line 59
2025-05-01 17:26:37,721 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = ERROR was sent
2025-05-01 17:27:07,080 [1] INFO BasketballServer.StartServer - Starting basketball server
2025-05-01 17:27:07,090 [1] INFO BasketballServer.StartServer - Reading properties from app.config...
2025-05-01 17:27:07,091 [1] DEBUG BasketballServer.utils.JsonConcurrentServer - Creating JsonConcurrentServer...
2025-05-01 17:27:07,095 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-01 17:27:17,004 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-05-01 17:27:17,005 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-01 17:27:17,046 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-05-01 17:27:17,049 [9] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = marcel and password = marcel1234.
2025-05-01 17:27:17,076 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-05-01 17:27:18,086 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = GET_GAMES was received
2025-05-01 17:27:18,094 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = GET_GAMES was sent
2025-05-01 17:27:19,698 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGOUT was received
2025-05-01 17:27:19,698 [9] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = marcel and password = marcel1234.
2025-05-01 17:27:19,699 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-05-01 17:27:21,994 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-05-01 17:27:21,995 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-01 17:27:21,995 [11] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-05-01 17:27:21,995 [11] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = ds and password = fds
2025-05-01 17:27:21,996 [11] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = ERROR was sent
2025-05-01 17:27:51,222 [1] INFO BasketballServer.StartServer - Starting basketball server
2025-05-01 17:27:51,231 [1] INFO BasketballServer.StartServer - Reading properties from app.config...
2025-05-01 17:27:51,233 [1] DEBUG BasketballServer.utils.JsonConcurrentServer - Creating JsonConcurrentServer...
2025-05-01 17:27:51,236 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-01 17:27:59,376 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-05-01 17:27:59,377 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-01 17:27:59,417 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-05-01 17:27:59,420 [9] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = marcel and password = marcel1234.
2025-05-01 17:27:59,433 [9] ERROR BasketballPersistance.repository.BDRepositoryCashier - Microsoft.Data.Sqlite.SqliteException (0x80004005): SQLite Error 14: 'unable to open database file'.
   at Microsoft.Data.Sqlite.SqliteException.ThrowExceptionForRC(Int32 rc, sqlite3 db)
   at Microsoft.Data.Sqlite.SqliteConnectionInternal..ctor(SqliteConnectionStringBuilder connectionOptions, SqliteConnectionPool pool)
   at Microsoft.Data.Sqlite.SqliteConnectionPool.GetConnection()
   at Microsoft.Data.Sqlite.SqliteConnectionFactory.GetConnection(SqliteConnection outerConnection)
   at Microsoft.Data.Sqlite.SqliteConnection.Open()
   at BasketballPersistance.repository.BDRepositoryCashier.findByUsernameAndPassowrd(String username, String password) in C:\Users\dento\Desktop\github\mpp-proiect-csharp-denton1612\TemaProiect3\BasketballClientServer\BasketballPersistance\BDRepositoryCashier.cs:line 41
2025-05-01 17:27:59,440 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = ERROR was sent
2025-05-01 17:29:50,372 [1] INFO BasketballServer.StartServer - Starting basketball server
2025-05-01 17:29:50,382 [1] INFO BasketballServer.StartServer - Reading properties from app.config...
2025-05-01 17:29:50,384 [1] DEBUG BasketballServer.utils.JsonConcurrentServer - Creating JsonConcurrentServer...
2025-05-01 17:29:50,388 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-01 17:29:59,032 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-05-01 17:29:59,033 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-01 17:29:59,072 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-05-01 17:29:59,075 [9] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = marcel and password = marcel1234.
2025-05-01 17:29:59,087 [9] ERROR BasketballPersistance.repository.BDRepositoryCashier - Microsoft.Data.Sqlite.SqliteException (0x80004005): SQLite Error 14: 'unable to open database file'.
   at Microsoft.Data.Sqlite.SqliteException.ThrowExceptionForRC(Int32 rc, sqlite3 db)
   at Microsoft.Data.Sqlite.SqliteConnectionInternal..ctor(SqliteConnectionStringBuilder connectionOptions, SqliteConnectionPool pool)
   at Microsoft.Data.Sqlite.SqliteConnectionPool.GetConnection()
   at Microsoft.Data.Sqlite.SqliteConnectionFactory.GetConnection(SqliteConnection outerConnection)
   at Microsoft.Data.Sqlite.SqliteConnection.Open()
   at BasketballPersistance.repository.BDRepositoryCashier.findByUsernameAndPassowrd(String username, String password) in C:\Users\dento\Desktop\github\mpp-proiect-csharp-denton1612\TemaProiect3\BasketballClientServer\BasketballPersistance\BDRepositoryCashier.cs:line 41
2025-05-01 17:29:59,094 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = ERROR was sent
2025-05-01 17:32:37,132 [1] INFO BasketballServer.StartServer - Starting basketball server
2025-05-01 17:32:37,141 [1] INFO BasketballServer.StartServer - Reading properties from app.config...
2025-05-01 17:32:37,142 [1] DEBUG BasketballServer.utils.JsonConcurrentServer - Creating JsonConcurrentServer...
2025-05-01 17:32:37,146 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-01 17:32:44,284 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-05-01 17:32:44,285 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-01 17:32:44,325 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-05-01 17:32:44,327 [9] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = marcel and password = marcel1234.
2025-05-01 17:32:44,342 [9] ERROR BasketballPersistance.repository.BDRepositoryCashier - Microsoft.Data.Sqlite.SqliteException (0x80004005): SQLite Error 1: 'no such table: cashiers'.
   at Microsoft.Data.Sqlite.SqliteException.ThrowExceptionForRC(Int32 rc, sqlite3 db)
   at Microsoft.Data.Sqlite.SqliteCommand.PrepareAndEnumerateStatements()+MoveNext()
   at Microsoft.Data.Sqlite.SqliteCommand.GetStatements()+MoveNext()
   at Microsoft.Data.Sqlite.SqliteDataReader.NextResult()
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReader(CommandBehavior behavior)
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteDbDataReader(CommandBehavior behavior)
   at BasketballPersistance.repository.BDRepositoryCashier.findByUsernameAndPassowrd(String username, String password) in C:\Users\dento\Desktop\github\mpp-proiect-csharp-denton1612\TemaProiect3\BasketballClientServer\BasketballPersistance\BDRepositoryCashier.cs:line 59
2025-05-01 17:32:44,350 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = ERROR was sent
2025-05-01 17:33:04,618 [1] INFO BasketballServer.StartServer - Starting basketball server
2025-05-01 17:33:04,634 [1] INFO BasketballServer.StartServer - Reading properties from app.config...
2025-05-01 17:33:04,635 [1] DEBUG BasketballServer.utils.JsonConcurrentServer - Creating JsonConcurrentServer...
2025-05-01 17:33:04,639 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-01 17:33:09,692 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-05-01 17:33:09,693 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-01 17:33:09,734 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-05-01 17:33:09,736 [9] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = marcel and password = marcel1234.
2025-05-01 17:33:09,760 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-05-01 17:33:10,774 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = GET_GAMES was received
2025-05-01 17:33:10,780 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = GET_GAMES was sent
2025-05-01 17:33:55,055 [1] INFO BasketballServer.StartServer - Starting basketball server
2025-05-01 17:33:55,064 [1] INFO BasketballServer.StartServer - Reading properties from app.config...
2025-05-01 17:33:55,066 [1] DEBUG BasketballServer.utils.JsonConcurrentServer - Creating JsonConcurrentServer...
2025-05-01 17:33:55,069 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-01 17:33:59,607 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-05-01 17:33:59,608 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-01 17:33:59,650 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-05-01 17:33:59,652 [9] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = marcel and password = marcel1234.
2025-05-01 17:33:59,675 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-05-01 17:34:00,682 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = GET_GAMES was received
2025-05-01 17:34:00,689 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = GET_GAMES was sent
2025-05-01 17:36:30,712 [1] INFO BasketballServer.StartServer - Starting basketball server
2025-05-01 17:36:30,731 [1] INFO BasketballServer.StartServer - Reading properties from app.config...
2025-05-01 17:36:30,733 [1] DEBUG BasketballServer.utils.JsonConcurrentServer - Creating JsonConcurrentServer...
2025-05-01 17:36:30,737 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-01 17:36:47,010 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-05-01 17:36:47,049 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-01 17:36:47,071 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-05-01 17:36:47,079 [9] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = marcel and password = marcel1234.
2025-05-01 17:36:47,099 [9] ERROR BasketballPersistance.repository.BDRepositoryCashier - Microsoft.Data.Sqlite.SqliteException (0x80004005): SQLite Error 1: 'no such table: cashiers'.
   at Microsoft.Data.Sqlite.SqliteException.ThrowExceptionForRC(Int32 rc, sqlite3 db)
   at Microsoft.Data.Sqlite.SqliteCommand.PrepareAndEnumerateStatements()+MoveNext()
   at Microsoft.Data.Sqlite.SqliteCommand.GetStatements()+MoveNext()
   at Microsoft.Data.Sqlite.SqliteDataReader.NextResult()
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReader(CommandBehavior behavior)
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteDbDataReader(CommandBehavior behavior)
   at BasketballPersistance.repository.BDRepositoryCashier.findByUsernameAndPassowrd(String username, String password) in C:\Users\dento\Desktop\github\mpp-proiect-csharp-denton1612\TemaProiect3\BasketballClientServer\BasketballPersistance\BDRepositoryCashier.cs:line 59
2025-05-01 17:36:47,107 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = ERROR was sent
2025-05-01 17:36:51,157 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-05-01 17:36:51,157 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-01 17:36:51,157 [11] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-05-01 17:36:51,157 [11] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = marcel and password = marcel1234.
2025-05-01 17:36:51,158 [11] ERROR BasketballPersistance.repository.BDRepositoryCashier - Microsoft.Data.Sqlite.SqliteException (0x80004005): SQLite Error 1: 'no such table: cashiers'.
   at Microsoft.Data.Sqlite.SqliteException.ThrowExceptionForRC(Int32 rc, sqlite3 db)
   at Microsoft.Data.Sqlite.SqliteCommand.PrepareAndEnumerateStatements()+MoveNext()
   at Microsoft.Data.Sqlite.SqliteCommand.GetStatements()+MoveNext()
   at Microsoft.Data.Sqlite.SqliteDataReader.NextResult()
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReader(CommandBehavior behavior)
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteDbDataReader(CommandBehavior behavior)
   at BasketballPersistance.repository.BDRepositoryCashier.findByUsernameAndPassowrd(String username, String password) in C:\Users\dento\Desktop\github\mpp-proiect-csharp-denton1612\TemaProiect3\BasketballClientServer\BasketballPersistance\BDRepositoryCashier.cs:line 59
2025-05-01 17:36:51,158 [11] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = ERROR was sent
2025-05-01 17:37:09,931 [1] INFO BasketballServer.StartServer - Starting basketball server
2025-05-01 17:37:09,940 [1] INFO BasketballServer.StartServer - Reading properties from app.config...
2025-05-01 17:37:09,941 [1] DEBUG BasketballServer.utils.JsonConcurrentServer - Creating JsonConcurrentServer...
2025-05-01 17:37:09,945 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-01 17:37:15,627 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-05-01 17:37:15,628 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-01 17:37:15,667 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-05-01 17:37:15,670 [9] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = marcel and password = marcel1234.
2025-05-01 17:37:15,685 [9] ERROR BasketballPersistance.repository.BDRepositoryCashier - Microsoft.Data.Sqlite.SqliteException (0x80004005): SQLite Error 1: 'no such table: cashiers'.
   at Microsoft.Data.Sqlite.SqliteException.ThrowExceptionForRC(Int32 rc, sqlite3 db)
   at Microsoft.Data.Sqlite.SqliteCommand.PrepareAndEnumerateStatements()+MoveNext()
   at Microsoft.Data.Sqlite.SqliteCommand.GetStatements()+MoveNext()
   at Microsoft.Data.Sqlite.SqliteDataReader.NextResult()
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReader(CommandBehavior behavior)
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteDbDataReader(CommandBehavior behavior)
   at BasketballPersistance.repository.BDRepositoryCashier.findByUsernameAndPassowrd(String username, String password) in C:\Users\dento\Desktop\github\mpp-proiect-csharp-denton1612\TemaProiect3\BasketballClientServer\BasketballPersistance\BDRepositoryCashier.cs:line 59
2025-05-01 17:37:15,691 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = ERROR was sent
2025-05-01 17:37:34,059 [1] INFO BasketballServer.StartServer - Starting basketball server
2025-05-01 17:37:34,069 [1] INFO BasketballServer.StartServer - Reading properties from app.config...
2025-05-01 17:37:34,070 [1] DEBUG BasketballServer.utils.JsonConcurrentServer - Creating JsonConcurrentServer...
2025-05-01 17:37:34,074 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-01 17:37:39,202 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-05-01 17:37:39,203 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-01 17:37:39,242 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-05-01 17:37:39,244 [9] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = marcel and password = marcel1234.
2025-05-01 17:37:39,268 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-05-01 17:37:40,282 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = GET_GAMES was received
2025-05-01 17:37:40,288 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = GET_GAMES was sent
2025-05-01 17:37:45,625 [1] INFO BasketballServer.StartServer - Starting basketball server
2025-05-01 17:37:45,635 [1] INFO BasketballServer.StartServer - Reading properties from app.config...
2025-05-01 17:37:45,636 [1] DEBUG BasketballServer.utils.JsonConcurrentServer - Creating JsonConcurrentServer...
2025-05-01 17:37:45,640 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-01 17:37:52,463 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-05-01 17:37:52,464 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-01 17:37:52,504 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-05-01 17:37:52,506 [9] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = marcel and password = marcel1234.
2025-05-01 17:37:52,531 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-05-01 17:37:53,545 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = GET_GAMES was received
2025-05-01 17:37:53,551 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = GET_GAMES was sent
2025-05-01 17:38:23,198 [1] INFO BasketballServer.StartServer - Starting basketball server
2025-05-01 17:38:23,216 [1] INFO BasketballServer.StartServer - Reading properties from app.config...
2025-05-01 17:38:23,217 [1] DEBUG BasketballServer.utils.JsonConcurrentServer - Creating JsonConcurrentServer...
2025-05-01 17:38:23,221 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-01 17:38:27,501 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-05-01 17:38:27,502 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-01 17:38:27,545 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-05-01 17:38:27,547 [9] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = marcel and password = marcel1234.
2025-05-01 17:38:27,573 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-05-01 17:38:28,588 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = GET_GAMES was received
2025-05-01 17:38:28,594 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = GET_GAMES was sent
2025-05-01 17:38:36,400 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = GET_PURCHASES was received
2025-05-01 17:38:36,401 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Purchases filtered for client = Name: denis, Address: 
2025-05-01 17:38:36,402 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Filter by client name is starting...
2025-05-01 17:38:36,403 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 6
2025-05-01 17:38:36,404 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Client found: Name: denis, Address: str doina
2025-05-01 17:38:36,404 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 3
2025-05-01 17:38:36,404 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Game found: Boston Celtics - Chicago Bulls
2025-05-01 17:38:36,404 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 6
2025-05-01 17:38:36,405 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Client found: Name: denis, Address: str doina
2025-05-01 17:38:36,405 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 4
2025-05-01 17:38:36,405 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Game found: Memphis Grizzlies - Oklahoma City Thunder
2025-05-01 17:38:36,405 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 6
2025-05-01 17:38:36,405 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Client found: Name: denis, Address: str doina
2025-05-01 17:38:36,405 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 3
2025-05-01 17:38:36,405 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Game found: Boston Celtics - Chicago Bulls
2025-05-01 17:38:36,405 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 5
2025-05-01 17:38:36,406 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Client found: Name: denis, Address: str doina nr 4
2025-05-01 17:38:36,406 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 4
2025-05-01 17:38:36,406 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Game found: Memphis Grizzlies - Oklahoma City Thunder
2025-05-01 17:38:36,406 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 6
2025-05-01 17:38:36,406 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Client found: Name: denis, Address: str doina
2025-05-01 17:38:36,406 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 4
2025-05-01 17:38:36,407 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Game found: Memphis Grizzlies - Oklahoma City Thunder
2025-05-01 17:38:36,407 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 6
2025-05-01 17:38:36,407 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Client found: Name: denis, Address: str doina
2025-05-01 17:38:36,407 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 3
2025-05-01 17:38:36,407 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Game found: Boston Celtics - Chicago Bulls
2025-05-01 17:38:36,407 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 6
2025-05-01 17:38:36,407 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Client found: Name: denis, Address: str doina
2025-05-01 17:38:36,407 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 3
2025-05-01 17:38:36,408 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Game found: Boston Celtics - Chicago Bulls
2025-05-01 17:38:36,408 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Purchases were filtered
2025-05-01 17:38:36,409 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = GET_PURCHASES was sent
2025-05-01 17:38:43,479 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = GET_PURCHASES was received
2025-05-01 17:38:43,479 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Purchases filtered for client = Name: , Address: str doina nr 4
2025-05-01 17:38:43,479 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Filter by client name and address is starting...
2025-05-01 17:38:43,480 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Purchases were filtered
2025-05-01 17:38:43,480 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = GET_PURCHASES was sent
2025-05-01 17:38:47,385 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = GET_PURCHASES was received
2025-05-01 17:38:47,386 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Purchases filtered for client = Name: denis, Address: str doina nr 4
2025-05-01 17:38:47,386 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Filter by client name and address is starting...
2025-05-01 17:38:47,386 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 5
2025-05-01 17:38:47,386 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Client found: Name: denis, Address: str doina nr 4
2025-05-01 17:38:47,386 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 4
2025-05-01 17:38:47,387 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Game found: Memphis Grizzlies - Oklahoma City Thunder
2025-05-01 17:38:47,387 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Purchases were filtered
2025-05-01 17:38:47,387 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = GET_PURCHASES was sent
2025-05-01 17:53:43,828 [1] INFO BasketballServer.StartServer - Starting basketball server
2025-05-01 17:53:43,846 [1] INFO BasketballServer.StartServer - Reading properties from app.config...
2025-05-01 17:53:43,848 [1] DEBUG BasketballServer.utils.JsonConcurrentServer - Creating JsonConcurrentServer...
2025-05-01 17:53:43,852 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-01 17:54:20,132 [1] INFO BasketballServer.StartServer - Starting basketball server
2025-05-01 17:54:20,141 [1] INFO BasketballServer.StartServer - Reading properties from app.config...
2025-05-01 17:54:20,142 [1] DEBUG BasketballServer.utils.JsonConcurrentServer - Creating JsonConcurrentServer...
2025-05-01 17:54:20,146 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-01 17:54:28,971 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-05-01 17:54:29,008 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-01 17:54:29,029 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-05-01 17:54:29,037 [9] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = marcel and password = marcel1234.
2025-05-01 17:54:29,066 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-05-01 17:54:30,071 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = GET_GAMES was received
2025-05-01 17:54:30,077 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = GET_GAMES was sent
2025-05-01 17:55:09,339 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = GET_PURCHASES was received
2025-05-01 17:55:09,339 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Purchases filtered for client = Name: maria, Address: cluj
2025-05-01 17:55:09,340 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Filter by client name and address is starting...
2025-05-01 17:55:09,341 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Purchases were filtered
2025-05-01 17:55:09,341 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = GET_PURCHASES was sent
2025-05-01 17:55:12,100 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = GET_PURCHASES was received
2025-05-01 17:55:12,100 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Purchases filtered for client = Name: maria, Address: 
2025-05-01 17:55:12,101 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Filter by client name is starting...
2025-05-01 17:55:12,101 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Purchases were filtered
2025-05-01 17:55:12,101 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = GET_PURCHASES was sent
2025-05-01 17:55:21,912 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = GET_PURCHASES was received
2025-05-01 17:55:21,912 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Purchases filtered for client = Name: denis, Address: 
2025-05-01 17:55:21,912 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Filter by client name is starting...
2025-05-01 17:55:21,913 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 6
2025-05-01 17:55:21,913 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Client found: Name: denis, Address: str doina
2025-05-01 17:55:21,914 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 3
2025-05-01 17:55:21,914 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Game found: Boston Celtics - Chicago Bulls
2025-05-01 17:55:21,914 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 6
2025-05-01 17:55:21,914 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Client found: Name: denis, Address: str doina
2025-05-01 17:55:21,915 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 4
2025-05-01 17:55:21,915 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Game found: Memphis Grizzlies - Oklahoma City Thunder
2025-05-01 17:55:21,915 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 6
2025-05-01 17:55:21,915 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Client found: Name: denis, Address: str doina
2025-05-01 17:55:21,915 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 3
2025-05-01 17:55:21,915 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Game found: Boston Celtics - Chicago Bulls
2025-05-01 17:55:21,915 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 5
2025-05-01 17:55:21,915 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Client found: Name: denis, Address: str doina nr 4
2025-05-01 17:55:21,916 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 4
2025-05-01 17:55:21,916 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Game found: Memphis Grizzlies - Oklahoma City Thunder
2025-05-01 17:55:21,916 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 6
2025-05-01 17:55:21,916 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Client found: Name: denis, Address: str doina
2025-05-01 17:55:21,916 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 4
2025-05-01 17:55:21,916 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Game found: Memphis Grizzlies - Oklahoma City Thunder
2025-05-01 17:55:21,916 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 6
2025-05-01 17:55:21,916 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Client found: Name: denis, Address: str doina
2025-05-01 17:55:21,916 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 3
2025-05-01 17:55:21,917 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Game found: Boston Celtics - Chicago Bulls
2025-05-01 17:55:21,917 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 6
2025-05-01 17:55:21,917 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Client found: Name: denis, Address: str doina
2025-05-01 17:55:21,917 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 3
2025-05-01 17:55:21,917 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Game found: Boston Celtics - Chicago Bulls
2025-05-01 17:55:21,917 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Purchases were filtered
2025-05-01 17:55:21,918 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = GET_PURCHASES was sent
2025-05-01 17:55:26,126 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = GET_PURCHASES was received
2025-05-01 17:55:26,126 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Purchases filtered for client = Name: maria, Address: 
2025-05-01 17:55:26,126 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Filter by client name is starting...
2025-05-01 17:55:26,126 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Purchases were filtered
2025-05-01 17:55:26,127 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = GET_PURCHASES was sent
2025-05-01 17:56:01,364 [1] INFO BasketballServer.StartServer - Starting basketball server
2025-05-01 17:56:01,374 [1] INFO BasketballServer.StartServer - Reading properties from app.config...
2025-05-01 17:56:01,376 [1] DEBUG BasketballServer.utils.JsonConcurrentServer - Creating JsonConcurrentServer...
2025-05-01 17:56:01,380 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-01 17:56:15,303 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-05-01 17:56:15,342 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-01 17:56:15,366 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-05-01 17:56:15,374 [9] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = marcel and password = marcel1234.
2025-05-01 17:56:15,400 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-05-01 17:56:16,405 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = GET_GAMES was received
2025-05-01 17:56:16,411 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = GET_GAMES was sent
2025-05-01 17:56:28,002 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = GET_PURCHASES was received
2025-05-01 17:56:28,002 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Purchases filtered for client = Name: maria, Address: cluj
2025-05-01 17:56:28,003 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Filter by client name and address is starting...
2025-05-01 17:56:28,003 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Purchases were filtered
2025-05-01 17:56:28,004 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = GET_PURCHASES was sent
2025-05-01 17:57:52,064 [1] INFO BasketballServer.StartServer - Starting basketball server
2025-05-01 17:57:52,073 [1] INFO BasketballServer.StartServer - Reading properties from app.config...
2025-05-01 17:57:52,074 [1] DEBUG BasketballServer.utils.JsonConcurrentServer - Creating JsonConcurrentServer...
2025-05-01 17:57:52,078 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-01 17:58:12,333 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-05-01 17:58:12,334 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-01 17:58:12,374 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-05-01 17:58:12,377 [9] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = marcel and password = marcel1234.
2025-05-01 17:58:12,400 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-05-01 17:58:13,402 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = GET_GAMES was received
2025-05-01 17:58:13,410 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = GET_GAMES was sent
2025-05-01 17:58:21,592 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = BUY_TICKET was received
2025-05-01 17:58:21,593 [9] INFO BasketballPersistance.repository.BDRepositoryClient - Adding client: Name: maria, Address: cluj
2025-05-01 17:58:21,597 [9] INFO BasketballPersistance.repository.BDRepositoryClient - Client Name: maria, Address: cluj was added.
2025-05-01 17:58:21,597 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Adding purchase: BasketballModel.domain.Purchase
2025-05-01 17:58:21,600 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Purchase was added.
2025-05-01 17:58:21,607 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Purchase was made in ServiceImpl for game = Memphis Grizzlies - Oklahoma City Thunder
2025-05-01 17:58:21,607 [11] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = BUY_TICKET was sent
2025-05-01 17:58:21,607 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-05-01 17:58:27,953 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = GET_PURCHASES was received
2025-05-01 17:58:27,953 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Purchases filtered for client = Name: maria, Address: 
2025-05-01 17:58:27,954 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Filter by client name is starting...
2025-05-01 17:58:27,955 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 14
2025-05-01 17:58:27,955 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Client found: Name: maria, Address: cluj
2025-05-01 17:58:27,955 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 4
2025-05-01 17:58:27,956 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Game found: Memphis Grizzlies - Oklahoma City Thunder
2025-05-01 17:58:27,956 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Purchases were filtered
2025-05-01 17:58:27,956 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = GET_PURCHASES was sent
2025-05-01 17:58:33,335 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = GET_PURCHASES was received
2025-05-01 17:58:33,335 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Purchases filtered for client = Name: maria, Address: cluj
2025-05-01 17:58:33,336 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Filter by client name and address is starting...
2025-05-01 17:58:33,336 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 14
2025-05-01 17:58:33,336 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Client found: Name: maria, Address: cluj
2025-05-01 17:58:33,337 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 4
2025-05-01 17:58:33,337 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Game found: Memphis Grizzlies - Oklahoma City Thunder
2025-05-01 17:58:33,337 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Purchases were filtered
2025-05-01 17:58:33,337 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = GET_PURCHASES was sent
2025-05-01 17:58:36,809 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = GET_PURCHASES was received
2025-05-01 17:58:36,810 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Purchases filtered for client = Name: maria, Address: c
2025-05-01 17:58:36,810 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Filter by client name and address is starting...
2025-05-01 17:58:36,810 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Purchases were filtered
2025-05-01 17:58:36,810 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = GET_PURCHASES was sent
2025-05-01 17:58:37,817 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGOUT was received
2025-05-01 17:58:37,817 [9] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = marcel and password = marcel1234.
2025-05-01 17:58:37,818 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-05-02 16:31:13,538 [1] INFO BasketballServer.StartServer - Starting basketball server
2025-05-02 16:31:13,556 [1] INFO BasketballServer.StartServer - Reading properties from app.config...
2025-05-02 16:31:13,557 [1] DEBUG BasketballServer.utils.JsonConcurrentServer - Creating JsonConcurrentServer...
2025-05-02 16:31:13,561 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-02 16:31:33,469 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-05-02 16:31:33,511 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-02 16:31:33,537 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-05-02 16:31:33,546 [9] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = marcel and password = marcel1234.
2025-05-02 16:31:33,696 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-05-02 16:31:34,710 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = GET_GAMES was received
2025-05-02 16:31:34,717 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = GET_GAMES was sent
2025-05-02 16:31:40,085 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = GET_PURCHASES was received
2025-05-02 16:31:40,085 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Purchases filtered for client = Name: denis, Address: 
2025-05-02 16:31:40,086 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Filter by client name is starting...
2025-05-02 16:31:40,087 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 6
2025-05-02 16:31:40,088 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Client found: Name: denis, Address: str doina
2025-05-02 16:31:40,088 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 3
2025-05-02 16:31:40,089 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Game found: Boston Celtics - Chicago Bulls
2025-05-02 16:31:40,089 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 6
2025-05-02 16:31:40,089 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Client found: Name: denis, Address: str doina
2025-05-02 16:31:40,089 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 4
2025-05-02 16:31:40,089 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Game found: Memphis Grizzlies - Oklahoma City Thunder
2025-05-02 16:31:40,089 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 6
2025-05-02 16:31:40,089 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Client found: Name: denis, Address: str doina
2025-05-02 16:31:40,089 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 3
2025-05-02 16:31:40,090 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Game found: Boston Celtics - Chicago Bulls
2025-05-02 16:31:40,090 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 5
2025-05-02 16:31:40,090 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Client found: Name: denis, Address: str doina nr 4
2025-05-02 16:31:40,090 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 4
2025-05-02 16:31:40,090 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Game found: Memphis Grizzlies - Oklahoma City Thunder
2025-05-02 16:31:40,090 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 6
2025-05-02 16:31:40,090 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Client found: Name: denis, Address: str doina
2025-05-02 16:31:40,090 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 4
2025-05-02 16:31:40,091 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Game found: Memphis Grizzlies - Oklahoma City Thunder
2025-05-02 16:31:40,091 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 6
2025-05-02 16:31:40,091 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Client found: Name: denis, Address: str doina
2025-05-02 16:31:40,091 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 3
2025-05-02 16:31:40,091 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Game found: Boston Celtics - Chicago Bulls
2025-05-02 16:31:40,091 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 6
2025-05-02 16:31:40,091 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Client found: Name: denis, Address: str doina
2025-05-02 16:31:40,091 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 3
2025-05-02 16:31:40,091 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Game found: Boston Celtics - Chicago Bulls
2025-05-02 16:31:40,092 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Purchases were filtered
2025-05-02 16:31:40,092 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = GET_PURCHASES was sent
2025-05-02 16:38:57,998 [9] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\Projects\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-05-02 16:38:59,013 [9] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\Projects\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-05-02 16:39:00,020 [9] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\Projects\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-05-02 16:39:01,032 [9] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\Projects\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-05-02 16:39:02,038 [9] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\Projects\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-05-02 16:39:03,053 [9] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\Projects\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-05-02 16:39:04,058 [9] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\Projects\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-05-02 16:39:05,060 [9] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\Projects\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-05-02 16:39:06,067 [9] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\Projects\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-05-02 16:39:07,069 [9] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\Projects\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-05-02 16:39:08,082 [9] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\Projects\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-05-02 16:39:09,084 [9] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\Projects\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-05-02 16:39:10,089 [9] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\Projects\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-05-02 16:39:10,717 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-05-02 16:39:10,717 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-02 16:39:10,737 [19] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-05-02 16:39:10,737 [19] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = marcel and password = marcel1234.
2025-05-02 16:39:10,738 [19] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = ERROR was sent
2025-05-02 16:39:11,098 [9] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\Projects\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-05-02 16:39:12,103 [9] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\Projects\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-05-02 16:39:13,111 [9] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\Projects\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-05-02 16:39:14,122 [9] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\Projects\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-05-02 16:39:15,131 [9] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\Projects\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-05-02 16:39:16,141 [9] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\Projects\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-05-02 16:39:20,370 [1] INFO BasketballServer.StartServer - Starting basketball server
2025-05-02 16:39:20,380 [1] INFO BasketballServer.StartServer - Reading properties from app.config...
2025-05-02 16:39:20,382 [1] DEBUG BasketballServer.utils.JsonConcurrentServer - Creating JsonConcurrentServer...
2025-05-02 16:39:20,386 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-02 16:39:28,366 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-05-02 16:39:28,367 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-02 16:39:28,407 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-05-02 16:39:28,409 [9] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = marcel and password = marcel1234.
2025-05-02 16:39:28,433 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-05-02 16:39:29,434 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = GET_GAMES was received
2025-05-02 16:39:29,441 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = GET_GAMES was sent
2025-05-02 16:42:13,971 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = GET_PURCHASES was received
2025-05-02 16:42:13,971 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Purchases filtered for client = Name: denis, Address: 
2025-05-02 16:42:13,974 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Filter by client name is starting...
2025-05-02 16:42:13,975 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 6
2025-05-02 16:42:13,977 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Client found: Name: denis, Address: str doina
2025-05-02 16:42:13,977 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 3
2025-05-02 16:42:13,978 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Game found: Boston Celtics - Chicago Bulls
2025-05-02 16:42:13,978 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 6
2025-05-02 16:42:13,978 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Client found: Name: denis, Address: str doina
2025-05-02 16:42:13,978 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 4
2025-05-02 16:42:13,978 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Game found: Memphis Grizzlies - Oklahoma City Thunder
2025-05-02 16:42:13,978 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 6
2025-05-02 16:42:13,979 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Client found: Name: denis, Address: str doina
2025-05-02 16:42:13,979 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 3
2025-05-02 16:42:13,979 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Game found: Boston Celtics - Chicago Bulls
2025-05-02 16:42:13,979 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 5
2025-05-02 16:42:13,980 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Client found: Name: denis, Address: str doina nr 4
2025-05-02 16:42:13,980 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 4
2025-05-02 16:42:13,980 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Game found: Memphis Grizzlies - Oklahoma City Thunder
2025-05-02 16:42:13,980 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 6
2025-05-02 16:42:13,981 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Client found: Name: denis, Address: str doina
2025-05-02 16:42:13,981 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 4
2025-05-02 16:42:13,981 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Game found: Memphis Grizzlies - Oklahoma City Thunder
2025-05-02 16:42:13,981 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 6
2025-05-02 16:42:13,981 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Client found: Name: denis, Address: str doina
2025-05-02 16:42:13,981 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 3
2025-05-02 16:42:13,982 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Game found: Boston Celtics - Chicago Bulls
2025-05-02 16:42:13,982 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 6
2025-05-02 16:42:13,982 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Client found: Name: denis, Address: str doina
2025-05-02 16:42:13,982 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 3
2025-05-02 16:42:13,982 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Game found: Boston Celtics - Chicago Bulls
2025-05-02 16:42:13,982 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Purchases were filtered
2025-05-02 16:42:13,983 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = GET_PURCHASES was sent
2025-05-02 16:43:24,412 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGOUT was received
2025-05-02 16:43:24,412 [9] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = marcel and password = marcel1234.
2025-05-02 16:43:24,413 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-05-02 16:46:20,757 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-05-02 16:46:20,758 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-02 16:46:20,778 [17] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-05-02 16:46:20,779 [17] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = marcel and password = marcel1234.
2025-05-02 16:46:20,779 [17] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-05-02 16:46:21,783 [17] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = GET_GAMES was received
2025-05-02 16:46:21,784 [17] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = GET_GAMES was sent
2025-05-02 16:46:23,404 [17] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGOUT was received
2025-05-02 16:46:23,404 [17] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = marcel and password = marcel1234.
2025-05-02 16:46:23,405 [17] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-05-02 16:46:31,600 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-05-02 16:46:31,600 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-02 16:46:31,601 [19] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-05-02 16:46:31,601 [19] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = marcel and password = marcel1234.
2025-05-02 16:46:31,601 [19] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-05-02 16:46:32,606 [19] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = GET_GAMES was received
2025-05-02 16:46:32,607 [19] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = GET_GAMES was sent
2025-05-02 16:46:41,286 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-05-02 16:46:41,286 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-02 16:46:41,308 [20] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-05-02 16:46:41,308 [20] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = marcel and password = marcel1234.
2025-05-02 16:46:41,309 [20] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = ERROR was sent
2025-05-02 16:46:53,400 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-05-02 16:46:53,401 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-02 16:46:53,401 [21] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-05-02 16:46:53,401 [21] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = marcel and password = marcel1234.
2025-05-02 16:46:53,401 [21] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = ERROR was sent
2025-05-02 16:46:57,177 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-05-02 16:46:57,177 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-02 16:46:57,177 [22] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-05-02 16:46:57,177 [22] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = marcel and password = marcel1234.
2025-05-02 16:46:57,178 [22] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = ERROR was sent
2025-05-02 16:48:51,449 [19] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\Projects\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-05-02 16:48:52,465 [19] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\Projects\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-05-02 16:48:53,478 [19] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\Projects\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-05-02 16:48:54,489 [19] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\Projects\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-05-02 16:48:55,501 [19] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\Projects\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-05-02 16:48:56,512 [19] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\Projects\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-05-02 16:48:57,523 [19] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\Projects\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-05-02 16:48:58,526 [19] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\Projects\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-05-02 16:48:59,539 [19] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\Projects\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-05-02 16:49:00,546 [19] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\Projects\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-05-02 16:49:01,472 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-05-02 16:49:01,472 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-02 16:49:01,496 [27] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-05-02 16:49:01,496 [27] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = marcel and password = marcel1234.
2025-05-02 16:49:01,497 [27] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = ERROR was sent
2025-05-02 16:49:01,558 [19] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\Projects\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-05-02 16:49:02,507 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-05-02 16:49:02,507 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-02 16:49:02,507 [28] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-05-02 16:49:02,508 [28] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = marcel and password = marcel1234.
2025-05-02 16:49:02,508 [28] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = ERROR was sent
2025-05-02 16:49:02,570 [19] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\Projects\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-05-02 16:49:03,571 [19] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\Projects\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-05-02 16:49:04,576 [19] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\Projects\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-05-02 16:49:05,592 [19] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\Projects\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-05-02 16:49:06,597 [19] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\Projects\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-05-02 16:49:07,609 [19] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\Projects\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-05-02 16:49:08,611 [19] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\Projects\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-05-02 16:49:09,625 [19] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\Projects\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-05-02 16:49:10,639 [19] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\Projects\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-05-02 16:49:11,651 [19] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\Projects\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-05-02 16:49:12,660 [19] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\Projects\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-05-02 16:49:20,337 [1] INFO BasketballServer.StartServer - Starting basketball server
2025-05-02 16:49:20,347 [1] INFO BasketballServer.StartServer - Reading properties from app.config...
2025-05-02 16:49:20,348 [1] DEBUG BasketballServer.utils.JsonConcurrentServer - Creating JsonConcurrentServer...
2025-05-02 16:49:20,352 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-02 16:49:25,418 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-05-02 16:49:25,419 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-02 16:49:25,459 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-05-02 16:49:25,462 [9] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = marcel and password = marcel1234.
2025-05-02 16:49:25,490 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-05-02 16:49:26,502 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = GET_GAMES was received
2025-05-02 16:49:26,511 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = GET_GAMES was sent
2025-05-02 16:49:28,546 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGOUT was received
2025-05-02 16:49:28,547 [9] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = marcel and password = marcel1234.
2025-05-02 16:49:28,548 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-05-02 16:50:03,843 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-05-02 16:50:03,844 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-02 16:50:03,865 [11] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-05-02 16:50:03,865 [11] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = marcel and password = marcel1234.
2025-05-02 16:50:03,866 [11] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-05-02 16:50:04,881 [11] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = GET_GAMES was received
2025-05-02 16:50:04,881 [11] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = GET_GAMES was sent
2025-05-02 16:50:05,893 [11] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGOUT was received
2025-05-02 16:50:05,893 [11] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = marcel and password = marcel1234.
2025-05-02 16:50:05,894 [11] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-05-02 16:50:15,741 [1] INFO BasketballServer.StartServer - Starting basketball server
2025-05-02 16:50:15,751 [1] INFO BasketballServer.StartServer - Reading properties from app.config...
2025-05-02 16:50:15,752 [1] DEBUG BasketballServer.utils.JsonConcurrentServer - Creating JsonConcurrentServer...
2025-05-02 16:50:15,756 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-02 16:50:25,664 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-05-02 16:50:25,665 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-02 16:50:25,714 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-05-02 16:50:25,718 [9] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = marcel and password = marcel1234.
2025-05-02 16:50:25,742 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-05-02 16:50:26,746 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = GET_GAMES was received
2025-05-02 16:50:26,754 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = GET_GAMES was sent
2025-05-02 16:50:27,759 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGOUT was received
2025-05-02 16:50:27,760 [9] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = marcel and password = marcel1234.
2025-05-02 16:50:27,761 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-05-02 16:50:43,495 [1] INFO BasketballServer.StartServer - Starting basketball server
2025-05-02 16:50:43,506 [1] INFO BasketballServer.StartServer - Reading properties from app.config...
2025-05-02 16:50:43,507 [1] DEBUG BasketballServer.utils.JsonConcurrentServer - Creating JsonConcurrentServer...
2025-05-02 16:50:43,511 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-02 16:50:51,499 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-05-02 16:50:51,500 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-02 16:50:51,551 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-05-02 16:50:51,554 [9] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = marcel and password = marcel1234.
2025-05-02 16:50:51,578 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-05-02 16:50:52,582 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = GET_GAMES was received
2025-05-02 16:50:52,589 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = GET_GAMES was sent
2025-05-02 16:50:54,177 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGOUT was received
2025-05-02 16:50:54,177 [9] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = marcel and password = marcel1234.
2025-05-02 16:50:54,178 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-05-02 16:52:06,210 [1] INFO BasketballServer.StartServer - Starting basketball server
2025-05-02 16:52:06,220 [1] INFO BasketballServer.StartServer - Reading properties from app.config...
2025-05-02 16:52:06,222 [1] DEBUG BasketballServer.utils.JsonConcurrentServer - Creating JsonConcurrentServer...
2025-05-02 16:52:06,226 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-02 16:52:16,359 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-05-02 16:52:16,360 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-02 16:52:16,413 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-05-02 16:52:16,416 [9] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = marcel and password = marcel1234.
2025-05-02 16:52:16,556 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-05-02 16:52:17,564 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = GET_GAMES was received
2025-05-02 16:52:17,571 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = GET_GAMES was sent
2025-05-02 16:52:18,572 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGOUT was received
2025-05-02 16:52:18,573 [9] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = marcel and password = marcel1234.
2025-05-02 16:52:18,574 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-05-02 16:57:22,071 [1] INFO BasketballServer.StartServer - Starting basketball server
2025-05-02 16:57:22,082 [1] INFO BasketballServer.StartServer - Reading properties from app.config...
2025-05-02 16:57:22,083 [1] DEBUG BasketballServer.utils.JsonConcurrentServer - Creating JsonConcurrentServer...
2025-05-02 16:57:22,087 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-02 16:57:32,477 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-05-02 16:57:32,478 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-02 16:57:32,519 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-05-02 16:57:32,522 [9] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = marcel and password = marcel1234.
2025-05-02 16:57:32,548 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-05-02 16:57:33,560 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = GET_GAMES was received
2025-05-02 16:57:33,567 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = GET_GAMES was sent
2025-05-02 16:57:35,153 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGOUT was received
2025-05-02 16:57:35,153 [9] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = marcel and password = marcel1234.
2025-05-02 16:57:35,154 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-05-02 16:57:47,400 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-05-02 16:57:47,401 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-02 16:57:47,420 [11] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-05-02 16:57:47,420 [11] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = marcel and password = marcel1234.
2025-05-02 16:57:47,421 [11] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-05-02 16:57:48,426 [11] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = GET_GAMES was received
2025-05-02 16:57:48,427 [11] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = GET_GAMES was sent
2025-05-02 16:57:49,624 [11] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGOUT was received
2025-05-02 16:57:49,624 [11] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = marcel and password = marcel1234.
2025-05-02 16:57:49,624 [11] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-05-02 17:01:48,662 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-05-02 17:01:48,662 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-02 17:01:48,681 [14] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-05-02 17:01:48,682 [14] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = marcel and password = marcel1234.
2025-05-02 17:01:48,682 [14] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-05-02 17:01:49,689 [14] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = GET_GAMES was received
2025-05-02 17:01:49,690 [14] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = GET_GAMES was sent
2025-05-02 17:01:50,949 [14] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGOUT was received
2025-05-02 17:01:50,949 [14] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = marcel and password = marcel1234.
2025-05-02 17:01:50,950 [14] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-05-02 17:01:58,351 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-05-02 17:01:58,352 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-02 17:01:58,371 [15] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-05-02 17:01:58,371 [15] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = marcel and password = marcel1234.
2025-05-02 17:01:58,371 [15] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-05-02 17:01:59,374 [15] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = GET_GAMES was received
2025-05-02 17:01:59,375 [15] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = GET_GAMES was sent
2025-05-02 17:02:07,106 [15] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGOUT was received
2025-05-02 17:02:07,106 [15] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = marcel and password = marcel1234.
2025-05-02 17:02:07,107 [15] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-05-02 17:03:27,883 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-05-02 17:03:27,884 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-02 17:03:27,903 [18] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-05-02 17:03:27,903 [18] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = marcel and password = marcel1234.
2025-05-02 17:03:27,903 [18] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-05-02 17:03:28,912 [18] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = GET_GAMES was received
2025-05-02 17:03:28,912 [18] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = GET_GAMES was sent
2025-05-02 17:03:29,979 [18] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGOUT was received
2025-05-02 17:03:29,979 [18] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = marcel and password = marcel1234.
2025-05-02 17:03:29,979 [18] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-05-02 18:47:28,933 [1] INFO BasketballServer.StartServer - Starting basketball server
2025-05-02 18:47:28,943 [1] INFO BasketballServer.StartServer - Reading properties from app.config...
2025-05-02 18:47:28,945 [1] DEBUG BasketballServer.utils.JsonConcurrentServer - Creating JsonConcurrentServer...
2025-05-02 18:47:28,949 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-02 18:47:37,903 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-05-02 18:47:37,904 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-02 18:47:37,944 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-05-02 18:47:37,947 [9] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = marcel and password = marcel1234.
2025-05-02 18:47:37,971 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-05-02 18:47:38,975 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = GET_GAMES was received
2025-05-02 18:47:38,982 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = GET_GAMES was sent
2025-05-02 18:47:57,150 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = BUY_TICKET was received
2025-05-02 18:47:57,152 [9] INFO BasketballPersistance.repository.BDRepositoryClient - Adding client: Name: adi, Address: beius
2025-05-02 18:47:57,157 [9] INFO BasketballPersistance.repository.BDRepositoryClient - Client Name: adi, Address: beius was added.
2025-05-02 18:47:57,157 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Adding purchase: BasketballModel.domain.Purchase
2025-05-02 18:47:57,161 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Purchase was added.
2025-05-02 18:47:57,166 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Purchase was made in ServiceImpl for game = Memphis Grizzlies - Oklahoma City Thunder
2025-05-02 18:47:57,167 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-05-02 18:47:57,167 [11] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = BUY_TICKET was sent
2025-05-02 18:49:59,747 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = GET_PURCHASES was received
2025-05-02 18:49:59,747 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Purchases filtered for client = Name: adi, Address: 
2025-05-02 18:49:59,748 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Filter by client name is starting...
2025-05-02 18:49:59,748 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 8
2025-05-02 18:49:59,749 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Client found: Name: adi, Address: str doina
2025-05-02 18:49:59,750 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 4
2025-05-02 18:49:59,750 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Game found: Memphis Grizzlies - Oklahoma City Thunder
2025-05-02 18:49:59,750 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 14
2025-05-02 18:49:59,750 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Client found: Name: adi, Address: beius
2025-05-02 18:49:59,750 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 4
2025-05-02 18:49:59,750 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Game found: Memphis Grizzlies - Oklahoma City Thunder
2025-05-02 18:49:59,750 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Purchases were filtered
2025-05-02 18:49:59,751 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = GET_PURCHASES was sent
2025-05-02 18:50:09,388 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = GET_PURCHASES was received
2025-05-02 18:50:09,389 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Purchases filtered for client = Name: adi, Address: beius
2025-05-02 18:50:09,389 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Filter by client name and address is starting...
2025-05-02 18:50:09,389 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 14
2025-05-02 18:50:09,390 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Client found: Name: adi, Address: beius
2025-05-02 18:50:09,390 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 4
2025-05-02 18:50:09,390 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Game found: Memphis Grizzlies - Oklahoma City Thunder
2025-05-02 18:50:09,390 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Purchases were filtered
2025-05-02 18:50:09,390 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = GET_PURCHASES was sent
2025-05-02 18:50:15,349 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGOUT was received
2025-05-02 18:50:15,350 [9] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = marcel and password = marcel1234.
2025-05-02 18:50:15,350 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-05-02 18:56:13,963 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-05-02 18:56:13,963 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-02 18:56:13,982 [25] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-05-02 18:56:13,982 [25] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = marcel and password = marcel1234.
2025-05-02 18:56:13,983 [25] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-05-02 18:56:14,996 [25] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = GET_GAMES was received
2025-05-02 18:56:14,997 [25] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = GET_GAMES was sent
2025-05-02 18:56:21,868 [25] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGOUT was received
2025-05-02 18:56:21,868 [25] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = marcel and password = marcel1234.
2025-05-02 18:56:21,869 [25] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-05-02 19:07:09,277 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-05-02 19:07:09,278 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-02 19:07:09,297 [47] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-05-02 19:07:09,297 [47] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = marcel and password = marcel1234.
2025-05-02 19:07:09,298 [47] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-05-02 19:07:10,313 [47] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = GET_GAMES was received
2025-05-02 19:07:10,314 [47] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = GET_GAMES was sent
2025-05-02 19:07:12,492 [47] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGOUT was received
2025-05-02 19:07:12,492 [47] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = marcel and password = marcel1234.
2025-05-02 19:07:12,493 [47] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-05-02 19:07:39,327 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-05-02 19:07:39,328 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-02 19:07:39,328 [49] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-05-02 19:07:39,328 [49] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username =  and password = 
2025-05-02 19:07:39,328 [49] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = ERROR was sent
2025-05-02 19:07:44,357 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-05-02 19:07:44,357 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-02 19:07:44,357 [50] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-05-02 19:07:44,357 [50] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = marcel and password = marcel1234.
2025-05-02 19:07:44,358 [50] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-05-02 19:07:45,373 [50] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = GET_GAMES was received
2025-05-02 19:07:45,373 [50] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = GET_GAMES was sent
2025-05-02 19:07:46,377 [50] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGOUT was received
2025-05-02 19:07:46,377 [50] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = marcel and password = marcel1234.
2025-05-02 19:07:46,377 [50] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-05-02 19:10:23,951 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-05-02 19:10:23,952 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-02 19:10:23,972 [55] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-05-02 19:10:23,972 [55] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username =  and password = 
2025-05-02 19:10:23,973 [55] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = ERROR was sent
2025-05-02 19:10:28,565 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-05-02 19:10:28,565 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-02 19:10:28,565 [57] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-05-02 19:10:28,565 [57] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username =  and password = 
2025-05-02 19:10:28,566 [57] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = ERROR was sent
2025-05-02 19:10:32,104 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-05-02 19:10:32,104 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-02 19:10:32,104 [58] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-05-02 19:10:32,104 [58] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username =  and password = 
2025-05-02 19:10:32,105 [58] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = ERROR was sent
2025-05-02 19:10:34,497 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-05-02 19:10:34,497 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-02 19:10:34,497 [59] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-05-02 19:10:34,497 [59] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username =  and password = 
2025-05-02 19:10:34,498 [59] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = ERROR was sent
2025-05-02 19:11:17,245 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-05-02 19:11:17,245 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-02 19:11:17,265 [56] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-05-02 19:11:17,265 [56] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = dsa and password = fsad
2025-05-02 19:11:17,265 [56] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = ERROR was sent
2025-05-02 19:11:19,316 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-05-02 19:11:19,316 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-02 19:11:19,316 [62] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-05-02 19:11:19,316 [62] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = dsa and password = fsad
2025-05-02 19:11:19,316 [62] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = ERROR was sent
2025-05-02 19:14:02,253 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-05-02 19:14:02,253 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-02 19:14:02,273 [67] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-05-02 19:14:02,274 [67] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = asd and password = dfsd
2025-05-02 19:14:02,274 [67] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = ERROR was sent
2025-05-02 19:14:08,193 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-05-02 19:14:08,193 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-02 19:14:08,193 [69] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-05-02 19:14:08,193 [69] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = marcel and password = marcel1234.
2025-05-02 19:14:08,193 [69] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-05-02 19:14:09,204 [69] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = GET_GAMES was received
2025-05-02 19:14:09,205 [69] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = GET_GAMES was sent
2025-05-02 19:14:32,994 [69] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = GET_PURCHASES was received
2025-05-02 19:14:32,994 [69] DEBUG BasketballNetworking.json_protocol.ClientWorker - Purchases filtered for client = Name: , Address: 
2025-05-02 19:14:32,994 [69] INFO BasketballPersistance.repository.BDRepositoryPurchase - Filter by client name is starting...
2025-05-02 19:14:32,994 [69] INFO BasketballPersistance.repository.BDRepositoryPurchase - Purchases were filtered
2025-05-02 19:14:32,995 [69] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = GET_PURCHASES was sent
2025-05-02 19:14:36,028 [69] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGOUT was received
2025-05-02 19:14:36,028 [69] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = marcel and password = marcel1234.
2025-05-02 19:14:36,028 [69] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-05-02 19:23:29,970 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-05-02 19:23:29,971 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-02 19:23:29,990 [71] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-05-02 19:23:29,990 [71] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = das and password = fd
2025-05-02 19:23:29,991 [71] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = ERROR was sent
2025-05-02 19:23:36,654 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-05-02 19:23:36,654 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-02 19:23:36,654 [70] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-05-02 19:23:36,654 [70] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = casier1 and password = parola1234.
2025-05-02 19:23:36,654 [70] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = ERROR was sent
2025-05-02 19:23:44,900 [1] INFO BasketballServer.StartServer - Starting basketball server
2025-05-02 19:23:44,910 [1] INFO BasketballServer.StartServer - Reading properties from app.config...
2025-05-02 19:23:44,911 [1] DEBUG BasketballServer.utils.JsonConcurrentServer - Creating JsonConcurrentServer...
2025-05-02 19:23:44,915 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-02 19:23:56,981 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-05-02 19:23:57,023 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-02 19:23:57,046 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-05-02 19:23:57,054 [9] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = casier1 and password = parola1234.
2025-05-02 19:23:57,079 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-05-02 19:23:58,092 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = GET_GAMES was received
2025-05-02 19:23:58,099 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = GET_GAMES was sent
2025-05-02 19:24:12,413 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = GET_PURCHASES was received
2025-05-02 19:24:12,414 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Purchases filtered for client = Name: , Address: 
2025-05-02 19:24:12,414 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Filter by client name is starting...
2025-05-02 19:24:12,415 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Purchases were filtered
2025-05-02 19:24:12,416 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = GET_PURCHASES was sent
2025-05-02 19:24:15,577 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGOUT was received
2025-05-02 19:24:15,577 [9] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = casier1 and password = parola1234.
2025-05-02 19:24:15,578 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-05-02 19:24:18,782 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-05-02 19:24:18,782 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-02 19:24:18,782 [11] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-05-02 19:24:18,782 [11] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username =  and password = 
2025-05-02 19:24:18,783 [11] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = ERROR was sent
2025-05-02 19:33:55,310 [1] INFO BasketballServer.StartServer - Starting basketball server
2025-05-02 19:33:55,327 [1] INFO BasketballServer.StartServer - Reading properties from app.config...
2025-05-02 19:33:55,328 [1] DEBUG BasketballServer.utils.JsonConcurrentServer - Creating JsonConcurrentServer...
2025-05-02 19:33:55,332 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-02 19:34:08,159 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-05-02 19:34:08,160 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-02 19:34:08,201 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-05-02 19:34:08,203 [9] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = casier1 and password = parola1234.
2025-05-02 19:34:08,228 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-05-02 19:34:09,235 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = GET_GAMES was received
2025-05-02 19:34:09,242 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = GET_GAMES was sent
2025-05-02 19:34:16,638 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = GET_PURCHASES was received
2025-05-02 19:34:16,638 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Purchases filtered for client = Name: , Address: 
2025-05-02 19:34:16,639 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Filter by client name is starting...
2025-05-02 19:34:16,639 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Purchases were filtered
2025-05-02 19:34:16,640 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = GET_PURCHASES was sent
2025-05-02 19:34:19,146 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGOUT was received
2025-05-02 19:34:19,147 [9] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = casier1 and password = parola1234.
2025-05-02 19:34:19,147 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-05-02 19:35:27,645 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-05-02 19:35:27,645 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-02 19:35:27,669 [11] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-05-02 19:35:27,669 [11] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = casier1 and password = parola1234.
2025-05-02 19:35:27,669 [11] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-05-02 19:35:28,671 [11] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = GET_GAMES was received
2025-05-02 19:35:28,672 [11] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = GET_GAMES was sent
2025-05-02 19:43:24,591 [1] INFO BasketballServer.StartServer - Starting basketball server
2025-05-02 19:43:24,608 [1] INFO BasketballServer.StartServer - Reading properties from app.config...
2025-05-02 19:43:24,610 [1] DEBUG BasketballServer.utils.JsonConcurrentServer - Creating JsonConcurrentServer...
2025-05-02 19:43:24,614 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-02 19:43:37,274 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-05-02 19:43:37,275 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-02 19:43:37,321 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-05-02 19:43:37,324 [9] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = casier1 and password = parola1234.
2025-05-02 19:43:37,362 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-05-02 19:43:38,377 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = GET_GAMES was received
2025-05-02 19:43:38,384 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = GET_GAMES was sent
2025-05-02 19:43:56,052 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = BUY_TICKET was received
2025-05-02 19:43:56,054 [9] INFO BasketballPersistance.repository.BDRepositoryClient - Adding client: Name: denis, Address: doina
2025-05-02 19:43:56,058 [9] INFO BasketballPersistance.repository.BDRepositoryClient - Client Name: denis, Address: doina was added.
2025-05-02 19:43:56,059 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Adding purchase: BasketballModel.domain.Purchase
2025-05-02 19:43:56,062 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Purchase was added.
2025-05-02 19:43:56,068 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Purchase was made in ServiceImpl for game = Memphis Grizzlies - Oklahoma City Thunder
2025-05-02 19:43:56,068 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-05-02 19:43:56,068 [11] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = BUY_TICKET was sent
2025-05-02 19:44:04,738 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = GET_PURCHASES was received
2025-05-02 19:44:04,739 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Purchases filtered for client = Name: denis, Address: 
2025-05-02 19:44:04,739 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Filter by client name is starting...
2025-05-02 19:44:04,740 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 14
2025-05-02 19:44:04,741 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Client found: Name: denis, Address: doina
2025-05-02 19:44:04,741 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 4
2025-05-02 19:44:04,742 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Game found: Memphis Grizzlies - Oklahoma City Thunder
2025-05-02 19:44:04,742 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Purchases were filtered
2025-05-02 19:44:04,743 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = GET_PURCHASES was sent
2025-05-02 19:44:10,413 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = GET_PURCHASES was received
2025-05-02 19:44:10,413 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Purchases filtered for client = Name: denis, Address: doina
2025-05-02 19:44:10,414 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Filter by client name and address is starting...
2025-05-02 19:44:10,414 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 14
2025-05-02 19:44:10,414 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Client found: Name: denis, Address: doina
2025-05-02 19:44:10,414 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 4
2025-05-02 19:44:10,415 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Game found: Memphis Grizzlies - Oklahoma City Thunder
2025-05-02 19:44:10,415 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Purchases were filtered
2025-05-02 19:44:10,415 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = GET_PURCHASES was sent
2025-05-02 19:44:15,505 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGOUT was received
2025-05-02 19:44:15,506 [9] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = casier1 and password = parola1234.
2025-05-02 19:44:15,506 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-05-02 19:44:19,355 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-05-02 19:44:19,356 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-02 19:44:19,356 [12] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-05-02 19:44:19,356 [12] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username =  and password = 
2025-05-02 19:44:19,357 [12] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = ERROR was sent
2025-05-02 19:48:36,792 [1] INFO BasketballServer.StartServer - Starting basketball server
2025-05-02 19:48:36,802 [1] INFO BasketballServer.StartServer - Reading properties from app.config...
2025-05-02 19:48:36,804 [1] DEBUG BasketballServer.utils.JsonConcurrentServer - Creating JsonConcurrentServer...
2025-05-02 19:48:36,808 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-02 19:48:45,980 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-05-02 19:48:45,981 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-02 19:48:46,022 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-05-02 19:48:46,026 [9] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = casier1 and password = parola1234.
2025-05-02 19:48:46,058 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-05-02 19:48:47,070 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = GET_GAMES was received
2025-05-02 19:48:47,076 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = GET_GAMES was sent
2025-05-02 19:48:49,721 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = GET_PURCHASES was received
2025-05-02 19:48:49,722 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Purchases filtered for client = Name: denis, Address: 
2025-05-02 19:48:49,723 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Filter by client name is starting...
2025-05-02 19:48:49,724 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Purchases were filtered
2025-05-02 19:48:49,724 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = GET_PURCHASES was sent
2025-05-02 19:48:54,214 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = GET_PURCHASES was received
2025-05-02 19:48:54,215 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Purchases filtered for client = Name: , Address: doina
2025-05-02 19:48:54,215 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Filter by client name and address is starting...
2025-05-02 19:48:54,216 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Purchases were filtered
2025-05-02 19:48:54,216 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = GET_PURCHASES was sent
2025-05-02 19:49:00,840 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = GET_PURCHASES was received
2025-05-02 19:49:00,840 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Purchases filtered for client = Name: , Address: beius
2025-05-02 19:49:00,840 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Filter by client name and address is starting...
2025-05-02 19:49:00,840 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Purchases were filtered
2025-05-02 19:49:00,841 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = GET_PURCHASES was sent
2025-05-02 19:49:07,147 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = GET_PURCHASES was received
2025-05-02 19:49:07,147 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Purchases filtered for client = Name: client, Address: 
2025-05-02 19:49:07,147 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Filter by client name is starting...
2025-05-02 19:49:07,148 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Purchases were filtered
2025-05-02 19:49:07,148 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = GET_PURCHASES was sent
2025-05-02 19:49:52,319 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = BUY_TICKET was received
2025-05-02 19:49:52,320 [9] INFO BasketballPersistance.repository.BDRepositoryClient - Adding client: Name: denis, Address: doina
2025-05-02 19:49:52,324 [9] INFO BasketballPersistance.repository.BDRepositoryClient - Client Name: denis, Address: doina was added.
2025-05-02 19:49:52,325 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Adding purchase: BasketballModel.domain.Purchase
2025-05-02 19:49:52,328 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Purchase was added.
2025-05-02 19:49:52,332 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Purchase was made in ServiceImpl for game = Memphis Grizzlies - Oklahoma City Thunder
2025-05-02 19:49:52,333 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-05-02 19:49:52,333 [11] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = BUY_TICKET was sent
2025-05-02 19:49:57,398 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = GET_PURCHASES was received
2025-05-02 19:49:57,399 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Purchases filtered for client = Name: denis, Address: 
2025-05-02 19:49:57,399 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Filter by client name is starting...
2025-05-02 19:49:57,399 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 14
2025-05-02 19:49:57,400 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Client found: Name: denis, Address: doina
2025-05-02 19:49:57,400 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 4
2025-05-02 19:49:57,400 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Game found: Memphis Grizzlies - Oklahoma City Thunder
2025-05-02 19:49:57,400 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Purchases were filtered
2025-05-02 19:49:57,401 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = GET_PURCHASES was sent
2025-05-02 19:58:20,800 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGOUT was received
2025-05-02 19:58:20,800 [9] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = casier1 and password = parola1234.
2025-05-02 19:58:20,801 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-05-02 19:59:00,209 [1] INFO BasketballServer.StartServer - Starting basketball server
2025-05-02 19:59:00,218 [1] INFO BasketballServer.StartServer - Reading properties from app.config...
2025-05-02 19:59:00,220 [1] DEBUG BasketballServer.utils.JsonConcurrentServer - Creating JsonConcurrentServer...
2025-05-02 19:59:00,224 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-02 19:59:12,667 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-05-02 19:59:12,669 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-02 19:59:12,708 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-05-02 19:59:12,711 [9] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = casier1 and password = parola1234.
2025-05-02 19:59:12,735 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-05-02 19:59:13,736 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = GET_GAMES was received
2025-05-02 19:59:13,742 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = GET_GAMES was sent
2025-05-02 19:59:37,766 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = BUY_TICKET was received
2025-05-02 19:59:37,767 [9] INFO BasketballPersistance.repository.BDRepositoryClient - Adding client: Name: client1, Address: adresa1
2025-05-02 19:59:37,771 [9] INFO BasketballPersistance.repository.BDRepositoryClient - Client Name: client1, Address: adresa1 was added.
2025-05-02 19:59:37,772 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Adding purchase: BasketballModel.domain.Purchase
2025-05-02 19:59:37,775 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Purchase was added.
2025-05-02 19:59:37,781 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Purchase was made in ServiceImpl for game = Boston Celtics - Chicago Bulls
2025-05-02 19:59:37,781 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-05-02 19:59:37,781 [11] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = BUY_TICKET was sent
2025-05-02 20:02:27,667 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-05-02 20:02:27,668 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-02 20:02:27,686 [12] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-05-02 20:02:27,686 [12] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = casier1 and password = parola1234.
2025-05-02 20:02:27,687 [12] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = ERROR was sent
2025-05-02 20:02:40,599 [1] INFO BasketballServer.StartServer - Starting basketball server
2025-05-02 20:02:40,618 [1] INFO BasketballServer.StartServer - Reading properties from app.config...
2025-05-02 20:02:40,619 [1] DEBUG BasketballServer.utils.JsonConcurrentServer - Creating JsonConcurrentServer...
2025-05-02 20:02:40,623 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-02 20:02:49,332 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-05-02 20:02:49,334 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-02 20:02:49,380 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-05-02 20:02:49,384 [9] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = casier1. and password = parola1234.
2025-05-02 20:02:49,411 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = ERROR was sent
2025-05-02 20:03:00,762 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-05-02 20:03:00,762 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-02 20:03:00,762 [11] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-05-02 20:03:00,762 [11] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = casier1 and password = parola1234.
2025-05-02 20:03:00,766 [11] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-05-02 20:03:01,781 [11] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = GET_GAMES was received
2025-05-02 20:03:01,790 [11] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = GET_GAMES was sent
2025-05-02 20:04:11,044 [1] INFO BasketballServer.StartServer - Starting basketball server
2025-05-02 20:04:11,054 [1] INFO BasketballServer.StartServer - Reading properties from app.config...
2025-05-02 20:04:11,055 [1] DEBUG BasketballServer.utils.JsonConcurrentServer - Creating JsonConcurrentServer...
2025-05-02 20:04:11,059 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-02 20:04:18,516 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-05-02 20:04:18,517 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-02 20:04:18,560 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-05-02 20:04:18,562 [9] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = casier1 and password = parola1234.
2025-05-02 20:04:18,588 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-05-02 20:04:19,603 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = GET_GAMES was received
2025-05-02 20:04:19,610 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = GET_GAMES was sent
2025-05-02 20:04:29,158 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = GET_PURCHASES was received
2025-05-02 20:04:29,159 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Purchases filtered for client = Name: client1, Address: 
2025-05-02 20:04:29,160 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Filter by client name is starting...
2025-05-02 20:04:29,161 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 14
2025-05-02 20:04:29,162 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Client found: Name: client1, Address: adresa1
2025-05-02 20:04:29,162 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 3
2025-05-02 20:04:29,162 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Game found: Boston Celtics - Chicago Bulls
2025-05-02 20:04:29,162 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Purchases were filtered
2025-05-02 20:04:29,163 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = GET_PURCHASES was sent
2025-05-02 20:05:17,267 [1] INFO BasketballServer.StartServer - Starting basketball server
2025-05-02 20:05:17,280 [1] INFO BasketballServer.StartServer - Reading properties from app.config...
2025-05-02 20:05:17,282 [1] DEBUG BasketballServer.utils.JsonConcurrentServer - Creating JsonConcurrentServer...
2025-05-02 20:05:17,287 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-02 20:05:25,478 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-05-02 20:05:25,479 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-02 20:05:25,527 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-05-02 20:05:25,530 [9] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = casier1 and password = parola1234.
2025-05-02 20:05:25,561 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-05-02 20:05:26,576 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = GET_GAMES was received
2025-05-02 20:05:26,585 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = GET_GAMES was sent
2025-05-02 20:05:44,774 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = BUY_TICKET was received
2025-05-02 20:05:44,775 [9] INFO BasketballPersistance.repository.BDRepositoryClient - Adding client: Name: clien1, Address: adresa1
2025-05-02 20:05:44,781 [9] INFO BasketballPersistance.repository.BDRepositoryClient - Client Name: clien1, Address: adresa1 was added.
2025-05-02 20:05:44,782 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Adding purchase: BasketballModel.domain.Purchase
2025-05-02 20:05:44,785 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Purchase was added.
2025-05-02 20:05:44,791 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Purchase was made in ServiceImpl for game = Boston Celtics - Chicago Bulls
2025-05-02 20:05:44,792 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-05-02 20:05:44,792 [11] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = BUY_TICKET was sent
2025-05-02 20:05:53,977 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = GET_PURCHASES was received
2025-05-02 20:05:53,978 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Purchases filtered for client = Name: clien1, Address: 
2025-05-02 20:05:53,979 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Filter by client name is starting...
2025-05-02 20:05:53,980 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 14
2025-05-02 20:05:53,980 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Client found: Name: clien1, Address: adresa1
2025-05-02 20:05:53,980 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 3
2025-05-02 20:05:53,981 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Game found: Boston Celtics - Chicago Bulls
2025-05-02 20:05:53,981 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Purchases were filtered
2025-05-02 20:05:53,982 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = GET_PURCHASES was sent
2025-05-02 20:05:58,311 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = GET_PURCHASES was received
2025-05-02 20:05:58,311 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Purchases filtered for client = Name: client1, Address: 
2025-05-02 20:05:58,312 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Filter by client name is starting...
2025-05-02 20:05:58,312 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Purchases were filtered
2025-05-02 20:05:58,312 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = GET_PURCHASES was sent
2025-05-02 20:06:05,097 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = GET_PURCHASES was received
2025-05-02 20:06:05,097 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Purchases filtered for client = Name: , Address: adresa1
2025-05-02 20:06:05,097 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Filter by client name and address is starting...
2025-05-02 20:06:05,098 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Purchases were filtered
2025-05-02 20:06:05,098 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = GET_PURCHASES was sent
2025-05-02 20:06:38,352 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-05-02 20:06:38,352 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-02 20:06:38,377 [12] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-05-02 20:06:38,378 [12] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = casier1 and password = parola1234.
2025-05-02 20:06:38,378 [12] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = ERROR was sent
2025-05-02 20:06:45,233 [1] INFO BasketballServer.StartServer - Starting basketball server
2025-05-02 20:06:45,244 [1] INFO BasketballServer.StartServer - Reading properties from app.config...
2025-05-02 20:06:45,245 [1] DEBUG BasketballServer.utils.JsonConcurrentServer - Creating JsonConcurrentServer...
2025-05-02 20:06:45,250 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-02 20:06:54,187 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-05-02 20:06:54,188 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-02 20:06:54,237 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-05-02 20:06:54,241 [9] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = casier1 and password = parola1234.
2025-05-02 20:06:54,273 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-05-02 20:06:55,276 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = GET_GAMES was received
2025-05-02 20:06:55,285 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = GET_GAMES was sent
2025-05-02 20:10:01,234 [1] INFO BasketballServer.StartServer - Starting basketball server
2025-05-02 20:10:01,253 [1] INFO BasketballServer.StartServer - Reading properties from app.config...
2025-05-02 20:10:01,254 [1] DEBUG BasketballServer.utils.JsonConcurrentServer - Creating JsonConcurrentServer...
2025-05-02 20:10:01,258 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-02 20:10:17,314 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-05-02 20:10:17,315 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-02 20:10:17,361 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-05-02 20:10:17,364 [9] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = casier1 and password = parola1234.
2025-05-02 20:10:17,388 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = ERROR was sent
2025-05-02 20:10:21,810 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-05-02 20:10:21,811 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-02 20:10:21,811 [11] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-05-02 20:10:21,811 [11] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username =  and password = 
2025-05-02 20:10:21,812 [11] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = ERROR was sent
2025-05-02 20:27:08,457 [1] INFO BasketballServer.StartServer - Starting basketball server
2025-05-02 20:27:08,479 [1] INFO BasketballServer.StartServer - Reading properties from app.config...
2025-05-02 20:27:08,481 [1] DEBUG BasketballServer.utils.JsonConcurrentServer - Creating JsonConcurrentServer...
2025-05-02 20:27:08,486 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-02 20:27:18,094 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-05-02 20:27:18,096 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-02 20:27:18,147 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-05-02 20:27:18,151 [9] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = casier1 and password = parola1234.
2025-05-02 20:27:18,184 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-05-02 20:27:19,191 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = GET_GAMES was received
2025-05-02 20:27:19,200 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = GET_GAMES was sent
2025-05-02 20:27:45,305 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = BUY_TICKET was received
2025-05-02 20:27:45,307 [9] INFO BasketballPersistance.repository.BDRepositoryClient - Adding client: Name: client1, Address: adresa1
2025-05-02 20:27:45,312 [9] INFO BasketballPersistance.repository.BDRepositoryClient - Client Name: client1, Address: adresa1 was added.
2025-05-02 20:27:45,313 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Adding purchase: BasketballModel.domain.Purchase
2025-05-02 20:27:45,316 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Purchase was added.
2025-05-02 20:27:45,322 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Purchase was made in ServiceImpl for game = Boston Celtics - Chicago Bulls
2025-05-02 20:27:45,323 [11] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = BUY_TICKET was sent
2025-05-02 20:27:45,323 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-05-02 20:27:55,061 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGOUT was received
2025-05-02 20:27:55,062 [9] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = casier1 and password = parola1234.
2025-05-02 20:27:55,062 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-05-02 20:28:07,330 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-05-02 20:28:07,330 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-02 20:28:07,330 [12] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-05-02 20:28:07,330 [12] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = casier1 and password = parola1234.
2025-05-02 20:28:07,331 [12] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-05-02 20:28:08,333 [12] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = GET_GAMES was received
2025-05-02 20:28:08,334 [12] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = GET_GAMES was sent
2025-05-02 20:29:28,994 [1] INFO BasketballServer.StartServer - Starting basketball server
2025-05-02 20:29:29,014 [1] INFO BasketballServer.StartServer - Reading properties from app.config...
2025-05-02 20:29:29,016 [1] DEBUG BasketballServer.utils.JsonConcurrentServer - Creating JsonConcurrentServer...
2025-05-02 20:29:29,021 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-02 20:29:46,834 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-05-02 20:29:46,835 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-02 20:29:46,890 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-05-02 20:29:46,893 [9] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = casier1 and password = parola1234.
2025-05-02 20:29:46,925 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-05-02 20:29:47,926 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = GET_GAMES was received
2025-05-02 20:29:47,933 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = GET_GAMES was sent
2025-05-02 20:30:03,189 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = BUY_TICKET was received
2025-05-02 20:30:03,191 [9] INFO BasketballPersistance.repository.BDRepositoryClient - Adding client: Name: client1, Address: adresa1
2025-05-02 20:30:03,196 [9] INFO BasketballPersistance.repository.BDRepositoryClient - Client Name: client1, Address: adresa1 was added.
2025-05-02 20:30:03,196 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Adding purchase: BasketballModel.domain.Purchase
2025-05-02 20:30:03,199 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Purchase was added.
2025-05-02 20:30:03,206 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Purchase was made in ServiceImpl for game = Boston Celtics - Chicago Bulls
2025-05-02 20:30:03,206 [11] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = BUY_TICKET was sent
2025-05-02 20:30:03,206 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-05-02 20:30:06,997 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGOUT was received
2025-05-02 20:30:06,998 [9] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = casier1 and password = parola1234.
2025-05-02 20:30:06,999 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-05-02 20:30:15,200 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-05-02 20:30:15,200 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-02 20:30:15,200 [12] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-05-02 20:30:15,200 [12] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username =  and password = 
2025-05-02 20:30:15,201 [12] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = ERROR was sent
2025-05-02 20:35:12,747 [1] INFO BasketballServer.StartServer - Starting basketball server
2025-05-02 20:35:12,760 [1] INFO BasketballServer.StartServer - Reading properties from app.config...
2025-05-02 20:35:12,762 [1] DEBUG BasketballServer.utils.JsonConcurrentServer - Creating JsonConcurrentServer...
2025-05-02 20:35:12,767 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-02 20:35:22,264 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-05-02 20:35:22,265 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-02 20:35:22,318 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-05-02 20:35:22,321 [9] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = casier1 and password = parola1234.
2025-05-02 20:35:22,351 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = ERROR was sent
2025-05-03 16:38:56,832 [1] INFO BasketballServer.StartServer - Starting basketball server
2025-05-03 16:38:56,851 [1] INFO BasketballServer.StartServer - Reading properties from app.config...
2025-05-03 16:38:56,852 [1] DEBUG BasketballServer.utils.JsonConcurrentServer - Creating JsonConcurrentServer...
2025-05-03 16:38:56,856 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-03 16:39:07,988 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-05-03 16:39:08,035 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-03 16:39:08,062 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-05-03 16:39:08,071 [9] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = casier1 and password = parola1234.
2025-05-03 16:39:08,254 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-05-03 16:39:09,257 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = GET_GAMES was received
2025-05-03 16:39:09,264 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = GET_GAMES was sent
2025-05-03 16:39:14,564 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = GET_PURCHASES was received
2025-05-03 16:39:14,565 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Purchases filtered for client = Name: client1, Address: 
2025-05-03 16:39:14,566 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Filter by client name is starting...
2025-05-03 16:39:14,566 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 14
2025-05-03 16:39:14,567 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Client found: Name: client1, Address: adresa1
2025-05-03 16:39:14,567 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 3
2025-05-03 16:39:14,568 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Game found: Boston Celtics - Chicago Bulls
2025-05-03 16:39:14,568 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Purchases were filtered
2025-05-03 16:39:14,569 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = GET_PURCHASES was sent
2025-05-03 16:40:32,277 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-05-03 16:40:32,278 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-03 16:40:32,302 [11] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-05-03 16:40:32,302 [11] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = casier1 and password = parola1234.
2025-05-03 16:40:32,303 [11] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = ERROR was sent
2025-05-03 16:46:56,511 [1] INFO BasketballServer.StartServer - Starting basketball server
2025-05-03 16:46:56,523 [1] INFO BasketballServer.StartServer - Reading properties from app.config...
2025-05-03 16:46:56,524 [1] DEBUG BasketballServer.utils.JsonConcurrentServer - Creating JsonConcurrentServer...
2025-05-03 16:46:56,529 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-03 16:47:04,267 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-05-03 16:47:04,268 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-03 16:47:04,319 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-05-03 16:47:04,322 [9] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = casier1 and password = parola1234.
2025-05-03 16:47:04,350 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-05-03 16:47:05,362 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = GET_GAMES was received
2025-05-03 16:47:05,370 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = GET_GAMES was sent
2025-05-03 16:49:33,583 [9] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\Projects\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-05-03 16:49:34,598 [9] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\Projects\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-05-03 16:49:35,606 [9] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\Projects\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-05-03 16:49:36,618 [9] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\Projects\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-05-03 16:49:37,625 [9] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\Projects\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-05-03 16:49:38,638 [9] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\Projects\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-05-03 16:49:39,649 [9] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\Projects\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-05-03 16:49:40,661 [9] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\Projects\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-05-03 16:49:41,665 [9] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\Projects\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-05-03 16:49:42,673 [9] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\Projects\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-05-03 16:49:43,679 [9] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\Projects\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-05-03 16:49:44,682 [9] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\Projects\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-05-03 16:49:45,691 [9] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\Projects\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-05-03 16:49:45,962 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-05-03 16:49:45,963 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-03 16:49:45,981 [11] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-05-03 16:49:45,982 [11] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = casier1 and password = parola1234.
2025-05-03 16:49:45,983 [11] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = ERROR was sent
2025-05-03 16:49:46,700 [9] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\Projects\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-05-03 16:49:47,704 [9] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\Projects\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-05-03 16:49:48,706 [9] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\Projects\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-05-03 16:49:49,714 [9] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\Projects\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-05-03 16:49:50,727 [9] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\Projects\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-05-03 16:49:51,729 [9] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\Projects\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-05-03 16:49:52,742 [9] ERROR BasketballNetworking.json_protocol.ClientWorker - System.IO.IOException: Unable to read data from the transport connection: An existing connection was forcibly closed by the remote host..
 ---> System.Net.Sockets.SocketException (10054): An existing connection was forcibly closed by the remote host.
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   --- End of inner exception stack trace ---
   at System.Net.Sockets.NetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamReader.ReadBuffer()
   at System.IO.StreamReader.ReadLine()
   at BasketballNetworking.json_protocol.ClientWorker.Run() in C:\Users\dento\Desktop\github\Projects\BasketballClientServer\BasketballNetworking\json_protocol\ClientWorker.cs:line 47
2025-05-03 16:49:55,374 [1] INFO BasketballServer.StartServer - Starting basketball server
2025-05-03 16:49:55,385 [1] INFO BasketballServer.StartServer - Reading properties from app.config...
2025-05-03 16:49:55,386 [1] DEBUG BasketballServer.utils.JsonConcurrentServer - Creating JsonConcurrentServer...
2025-05-03 16:49:55,390 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-03 16:50:04,372 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-05-03 16:50:04,373 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-03 16:50:04,413 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-05-03 16:50:04,415 [9] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = casier1 and password = parola1234.
2025-05-03 16:50:04,438 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-05-03 16:50:05,440 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = GET_GAMES was received
2025-05-03 16:50:05,446 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = GET_GAMES was sent
2025-05-03 16:50:13,014 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGOUT was received
2025-05-03 16:50:13,014 [9] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = casier1 and password = parola1234.
2025-05-03 16:50:13,015 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-05-03 17:10:01,766 [1] INFO BasketballServer.StartServer - Starting basketball server
2025-05-03 17:10:01,782 [1] INFO BasketballServer.StartServer - Reading properties from app.config...
2025-05-03 17:10:01,783 [1] DEBUG BasketballServer.utils.JsonConcurrentServer - Creating JsonConcurrentServer...
2025-05-03 17:10:01,787 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-03 17:10:22,058 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-05-03 17:10:22,096 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-03 17:10:22,119 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-05-03 17:10:22,128 [9] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = casier1 and password = parola1234.
2025-05-03 17:10:22,156 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-05-03 17:10:23,171 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = GET_GAMES was received
2025-05-03 17:10:23,178 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = GET_GAMES was sent
2025-05-03 17:10:45,334 [1] INFO BasketballServer.StartServer - Starting basketball server
2025-05-03 17:10:45,344 [1] INFO BasketballServer.StartServer - Reading properties from app.config...
2025-05-03 17:10:45,346 [1] DEBUG BasketballServer.utils.JsonConcurrentServer - Creating JsonConcurrentServer...
2025-05-03 17:10:45,349 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-03 17:11:00,312 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-05-03 17:11:00,313 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-03 17:11:00,356 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-05-03 17:11:00,359 [9] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = casier1 and password = parola1234.
2025-05-03 17:11:00,384 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-05-03 17:11:01,393 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = GET_GAMES was received
2025-05-03 17:11:01,400 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = GET_GAMES was sent
2025-05-03 17:11:10,597 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGOUT was received
2025-05-03 17:11:10,598 [9] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = casier1 and password = parola1234.
2025-05-03 17:11:10,598 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-05-03 17:18:11,327 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-05-03 17:18:11,327 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-03 17:18:11,346 [18] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-05-03 17:18:11,346 [18] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = casier1 and password = parola1234.
2025-05-03 17:18:11,347 [18] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-05-03 17:18:12,361 [18] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = GET_GAMES was received
2025-05-03 17:18:12,362 [18] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = GET_GAMES was sent
2025-05-03 17:19:44,576 [1] INFO BasketballServer.StartServer - Starting basketball server
2025-05-03 17:19:44,586 [1] INFO BasketballServer.StartServer - Reading properties from app.config...
2025-05-03 17:19:44,587 [1] DEBUG BasketballServer.utils.JsonConcurrentServer - Creating JsonConcurrentServer...
2025-05-03 17:19:44,591 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-03 17:20:09,479 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-05-03 17:20:09,480 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-03 17:20:09,520 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-05-03 17:20:09,522 [9] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = casier1 and password = parola1234.
2025-05-03 17:20:09,546 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-05-03 17:20:10,546 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = GET_GAMES was received
2025-05-03 17:20:10,553 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = GET_GAMES was sent
2025-05-03 17:20:26,369 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = GET_PURCHASES was received
2025-05-03 17:20:26,370 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Purchases filtered for client = Name: , Address: 
2025-05-03 17:20:26,370 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Filter by client name is starting...
2025-05-03 17:20:26,371 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Purchases were filtered
2025-05-03 17:20:26,372 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = GET_PURCHASES was sent
2025-05-03 17:23:46,250 [1] INFO BasketballServer.StartServer - Starting basketball server
2025-05-03 17:23:46,260 [1] INFO BasketballServer.StartServer - Reading properties from app.config...
2025-05-03 17:23:46,261 [1] DEBUG BasketballServer.utils.JsonConcurrentServer - Creating JsonConcurrentServer...
2025-05-03 17:23:46,265 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-03 17:23:54,915 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-05-03 17:23:54,916 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-03 17:23:54,956 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-05-03 17:23:54,959 [9] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = casier1 and password = parola1234.
2025-05-03 17:23:54,984 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-05-03 17:23:55,998 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = GET_GAMES was received
2025-05-03 17:23:56,004 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = GET_GAMES was sent
2025-05-03 17:23:59,280 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = GET_PURCHASES was received
2025-05-03 17:23:59,280 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Purchases filtered for client = Name: , Address: 
2025-05-03 17:23:59,281 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Filter by client name is starting...
2025-05-03 17:23:59,282 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Purchases were filtered
2025-05-03 17:23:59,283 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = GET_PURCHASES was sent
2025-05-03 17:24:01,278 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = GET_PURCHASES was received
2025-05-03 17:24:01,278 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Purchases filtered for client = Name: , Address: 
2025-05-03 17:24:01,279 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Filter by client name is starting...
2025-05-03 17:24:01,279 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Purchases were filtered
2025-05-03 17:24:01,279 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = GET_PURCHASES was sent
2025-05-03 17:24:02,916 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = GET_PURCHASES was received
2025-05-03 17:24:02,917 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Purchases filtered for client = Name: , Address: 
2025-05-03 17:24:02,917 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Filter by client name is starting...
2025-05-03 17:24:02,917 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Purchases were filtered
2025-05-03 17:24:02,917 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = GET_PURCHASES was sent
2025-05-03 17:24:04,593 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = GET_PURCHASES was received
2025-05-03 17:24:04,593 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Purchases filtered for client = Name: , Address: 
2025-05-03 17:24:04,593 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Filter by client name is starting...
2025-05-03 17:24:04,593 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Purchases were filtered
2025-05-03 17:24:04,594 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = GET_PURCHASES was sent
2025-05-03 17:24:08,213 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = GET_PURCHASES was received
2025-05-03 17:24:08,213 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Purchases filtered for client = Name: denis, Address: 
2025-05-03 17:24:08,213 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Filter by client name is starting...
2025-05-03 17:24:08,213 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Purchases were filtered
2025-05-03 17:24:08,214 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = GET_PURCHASES was sent
2025-05-03 17:24:11,367 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = GET_PURCHASES was received
2025-05-03 17:24:11,367 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Purchases filtered for client = Name: client1, Address: 
2025-05-03 17:24:11,367 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Filter by client name is starting...
2025-05-03 17:24:11,368 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 14
2025-05-03 17:24:11,369 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Client found: Name: client1, Address: adresa1
2025-05-03 17:24:11,369 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Searching for client with id: 3
2025-05-03 17:24:11,369 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Game found: Boston Celtics - Chicago Bulls
2025-05-03 17:24:11,369 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Purchases were filtered
2025-05-03 17:24:11,370 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = GET_PURCHASES was sent
2025-05-03 17:24:13,132 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = GET_PURCHASES was received
2025-05-03 17:24:13,132 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Purchases filtered for client = Name: cas, Address: 
2025-05-03 17:24:13,132 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Filter by client name is starting...
2025-05-03 17:24:13,133 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Purchases were filtered
2025-05-03 17:24:13,133 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = GET_PURCHASES was sent
2025-05-03 17:24:17,151 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = GET_PURCHASES was received
2025-05-03 17:24:17,151 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Purchases filtered for client = Name: cas, Address: 
2025-05-03 17:24:17,151 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Filter by client name is starting...
2025-05-03 17:24:17,152 [9] INFO BasketballPersistance.repository.BDRepositoryPurchase - Purchases were filtered
2025-05-03 17:24:17,152 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = GET_PURCHASES was sent
2025-05-03 17:24:26,922 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGOUT was received
2025-05-03 17:24:26,923 [9] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = casier1 and password = parola1234.
2025-05-03 17:24:26,923 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-05-03 18:18:24,425 [1] INFO BasketballServer.StartServer - Starting basketball server
2025-05-03 18:18:24,436 [1] INFO BasketballServer.StartServer - Reading properties from app.config...
2025-05-03 18:18:24,438 [1] DEBUG BasketballServer.utils.JsonConcurrentServer - Creating JsonConcurrentServer...
2025-05-03 18:18:24,442 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-03 18:18:33,453 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-05-03 18:18:33,454 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-03 18:18:33,494 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-05-03 18:18:33,496 [9] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = casier1 and password = parola1234.
2025-05-03 18:18:33,624 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-05-03 18:18:34,625 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = GET_GAMES was received
2025-05-03 18:18:34,631 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = GET_GAMES was sent
2025-05-03 18:19:17,812 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGOUT was received
2025-05-03 18:19:17,813 [9] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = casier1 and password = parola1234.
2025-05-03 18:19:17,813 [9] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = OK was sent
2025-05-03 18:24:16,139 [1] DEBUG BasketballServer.utils.AbstractServer - Client connected
2025-05-03 18:24:16,140 [1] DEBUG BasketballServer.utils.AbstractServer - Waiting for clients...
2025-05-03 18:24:16,140 [16] DEBUG BasketballNetworking.json_protocol.ClientWorker - Request with type = LOGIN was received
2025-05-03 18:24:16,140 [16] DEBUG BasketballPersistance.repository.BDRepositoryCashier - Find cashier in basketball.db by username = dsa and password = fdsa
2025-05-03 18:24:16,140 [16] DEBUG BasketballNetworking.json_protocol.ClientWorker - Response with type = ERROR was sent
